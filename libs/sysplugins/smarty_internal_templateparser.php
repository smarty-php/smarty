<?php

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}

#line 11 "../smarty/lexer/smarty_internal_templateparser.y"

/**
 * Smarty Template Parser Class
 *
 * This is the template parser.
 * It is generated from the smarty_internal_templateparser.y file
 *
 * @author Uwe Tews <uwe.tews@googlemail.com>
 */
class Smarty_Internal_Templateparser
{
    #line 23 "../smarty/lexer/smarty_internal_templateparser.y"
    const Err1                 = 'Security error: Call to private object member not allowed';
    const Err2                 = 'Security error: Call to dynamic object member not allowed';
    const Err3                 = 'PHP in template not allowed. Use SmartyBC to enable it';
    const TP_VERT              = 1;
    const TP_COLON             = 2;
    const TP_UNIMATH           = 3;
    const TP_PHP               = 4;
    const TP_TEXT              = 5;
    const TP_STRIPON           = 6;
    const TP_STRIPOFF          = 7;
    const TP_LITERALSTART      = 8;
    const TP_LITERALEND        = 9;
    const TP_LITERAL           = 10;
    const TP_SIMPELOUTPUT      = 11;
    const TP_SIMPLETAG         = 12;
    const TP_LDEL              = 13;
    const TP_RDEL              = 14;
    const TP_DOLLARID          = 15;
    const TP_EQUAL             = 16;
    const TP_ID                = 17;
    const TP_PTR               = 18;
    const TP_LDELMAKENOCACHE   = 19;
    const TP_LDELIF            = 20;
    const TP_LDELFOR           = 21;
    const TP_SEMICOLON         = 22;
    const TP_INCDEC            = 23;
    const TP_TO                = 24;
    const TP_STEP              = 25;
    const TP_LDELFOREACH       = 26;
    const TP_SPACE             = 27;
    const TP_AS                = 28;
    const TP_APTR              = 29;
    const TP_LDELSETFILTER     = 30;
    const TP_CLOSETAG          = 31;
    const TP_LDELSLASH         = 32;
    const TP_ATTR              = 33;
    const TP_INTEGER           = 34;
    const TP_COMMA             = 35;
    const TP_OPENP             = 36;
    const TP_CLOSEP            = 37;
    const TP_MATH              = 38;
    const TP_ISIN              = 39;
    const TP_QMARK             = 40;
    const TP_NOT               = 41;
    const TP_TYPECAST          = 42;
    const TP_HEX               = 43;
    const TP_DOT               = 44;
    const TP_INSTANCEOF        = 45;
    const TP_SINGLEQUOTESTRING = 46;
    const TP_DOUBLECOLON       = 47;
    const TP_NAMESPACE         = 48;
    const TP_AT                = 49;
    const TP_HATCH             = 50;
    const TP_OPENB             = 51;
    const TP_CLOSEB            = 52;
    const TP_DOLLAR            = 53;
    const TP_LOGOP             = 54;
    const TP_SLOGOP            = 55;
    const TP_TLOGOP            = 56;
    const TP_SINGLECOND        = 57;
    const TP_QUOTE             = 58;
    const TP_BACKTICK          = 59;
    const YY_NO_ACTION         = 509;
    const YY_ACCEPT_ACTION     = 508;
    const YY_ERROR_ACTION      = 507;
    const YY_SZ_ACTTAB         = 1956;
    const YY_SHIFT_USE_DFLT    = -13;
    const YY_SHIFT_MAX         = 227;
    const YY_REDUCE_USE_DFLT   = -75;
    const YY_REDUCE_MAX        = 176;
    const YYNOCODE             = 107;
    const YYSTACKDEPTH         = 500;
    const YYNSTATE             = 322;
    const YYNRULE              = 185;
    const YYERRORSYMBOL        = 60;
    const YYERRSYMDT           = 'yy0';
    const YYFALLBACK           = 0;
    static public $yy_action        = array(
        41, 15, 301, 113, 209, 252, 254, 12, 274, 275,
        1, 251, 124, 95, 183, 165, 211, 10, 79, 141,
        14, 204, 248, 107, 6, 316, 17, 212, 250, 215,
        452, 188, 452, 13, 9, 23, 452, 436, 42, 38,
        258, 213, 287, 225, 41, 193, 32, 77, 3, 230,
        302, 295, 274, 275, 1, 75, 128, 132, 189, 83,
        211, 10, 79, 436, 200, 204, 436, 107, 452, 153,
        436, 212, 250, 215, 452, 206, 452, 26, 85, 4,
        452, 436, 42, 38, 258, 213, 306, 310, 41, 193,
        246, 77, 3, 116, 302, 302, 274, 275, 1, 75,
        127, 247, 189, 171, 211, 10, 79, 436, 7, 18,
        436, 107, 452, 166, 436, 212, 250, 215, 452, 206,
        452, 13, 202, 74, 452, 436, 42, 38, 258, 213,
        238, 310, 41, 193, 97, 77, 3, 175, 302, 205,
        274, 275, 1, 75, 127, 247, 179, 240, 211, 10,
        79, 436, 321, 204, 436, 107, 452, 190, 436, 212,
        250, 215, 452, 194, 452, 13, 253, 74, 452, 436,
        42, 38, 258, 213, 37, 310, 41, 193, 168, 77,
        3, 294, 302, 14, 274, 275, 1, 75, 127, 17,
        177, 149, 211, 10, 79, 436, 266, 267, 436, 107,
        452, 265, 436, 212, 250, 215, 452, 206, 452, 13,
        190, 190, 452, 436, 42, 38, 258, 213, 129, 310,
        41, 193, 190, 77, 3, 11, 302, 201, 274, 275,
        1, 75, 126, 436, 189, 22, 211, 10, 79, 436,
        436, 17, 436, 107, 452, 167, 436, 212, 250, 215,
        128, 206, 255, 13, 39, 28, 307, 87, 42, 38,
        258, 213, 312, 310, 41, 193, 89, 77, 3, 175,
        302, 232, 274, 275, 1, 75, 127, 173, 189, 267,
        211, 10, 79, 261, 252, 77, 12, 107, 302, 279,
        251, 212, 250, 215, 35, 178, 182, 13, 260, 21,
        14, 92, 42, 38, 258, 213, 17, 310, 41, 193,
        158, 77, 3, 138, 302, 259, 274, 275, 1, 75,
        127, 252, 184, 12, 211, 10, 79, 251, 219, 30,
        104, 107, 423, 5, 302, 212, 250, 215, 31, 206,
        226, 13, 144, 423, 105, 291, 42, 38, 258, 213,
        151, 310, 41, 193, 20, 77, 3, 205, 302, 207,
        274, 275, 1, 75, 125, 452, 189, 452, 211, 10,
        79, 452, 161, 292, 24, 107, 233, 6, 302, 212,
        250, 215, 128, 206, 218, 8, 21, 4, 136, 92,
        42, 38, 258, 213, 308, 310, 41, 193, 265, 77,
        3, 116, 302, 452, 274, 275, 1, 75, 91, 252,
        76, 12, 211, 10, 79, 251, 171, 77, 104, 107,
        302, 164, 423, 212, 250, 215, 301, 206, 209, 13,
        220, 315, 135, 423, 42, 38, 258, 213, 229, 310,
        41, 193, 265, 77, 3, 175, 302, 222, 274, 275,
        1, 75, 128, 452, 189, 452, 211, 10, 79, 452,
        171, 190, 241, 107, 237, 80, 298, 212, 250, 215,
        34, 206, 92, 26, 24, 231, 244, 423, 42, 38,
        258, 213, 247, 310, 23, 193, 78, 77, 423, 33,
        302, 305, 214, 209, 280, 75, 84, 103, 129, 181,
        94, 56, 302, 131, 74, 11, 95, 170, 101, 256,
        245, 16, 436, 424, 309, 192, 311, 281, 316, 436,
        305, 214, 209, 280, 424, 84, 103, 190, 180, 94,
        64, 175, 253, 163, 262, 95, 160, 292, 256, 245,
        376, 302, 216, 309, 192, 311, 305, 316, 209, 217,
        196, 100, 99, 376, 195, 106, 68, 175, 133, 376,
        19, 95, 86, 283, 256, 245, 154, 236, 265, 309,
        192, 311, 305, 316, 209, 276, 265, 100, 103, 205,
        180, 94, 64, 187, 297, 282, 175, 95, 155, 264,
        256, 245, 377, 257, 227, 309, 192, 311, 265, 316,
        271, 272, 273, 270, 122, 377, 269, 274, 275, 1,
        24, 377, 290, 284, 423, 211, 10, 79, 169, 134,
        221, 249, 107, 88, 216, 423, 212, 250, 215, 265,
        305, 210, 209, 152, 99, 98, 263, 343, 195, 114,
        50, 172, 210, 265, 228, 95, 247, 175, 256, 245,
        343, 190, 278, 309, 192, 311, 343, 316, 117, 299,
        142, 137, 264, 264, 344, 274, 275, 2, 74, 300,
        161, 292, 216, 211, 10, 79, 268, 344, 209, 239,
        107, 299, 99, 344, 212, 250, 215, 274, 275, 2,
        157, 300, 190, 37, 167, 211, 10, 79, 92, 139,
        265, 110, 107, 39, 28, 307, 212, 250, 215, 99,
        303, 143, 286, 27, 305, 190, 209, 43, 175, 98,
        147, 265, 195, 114, 45, 277, 108, 104, 262, 95,
        265, 81, 256, 245, 285, 27, 109, 309, 192, 311,
        305, 316, 209, 264, 113, 100, 148, 208, 195, 106,
        68, 82, 40, 36, 95, 95, 162, 292, 256, 245,
        190, 508, 90, 309, 192, 311, 316, 316, 320, 318,
        317, 314, 305, 379, 209, 203, 199, 100, 296, 138,
        195, 114, 63, 130, 92, 289, 379, 95, 264, 150,
        256, 245, 379, 293, 247, 309, 192, 311, 343, 316,
        305, 159, 209, 293, 343, 100, 197, 293, 195, 114,
        63, 293, 293, 293, 293, 95, 74, 293, 256, 245,
        293, 293, 293, 309, 192, 311, 293, 316, 293, 293,
        305, 293, 209, 293, 198, 100, 293, 293, 195, 114,
        63, 293, 293, 293, 293, 95, 293, 293, 256, 245,
        293, 293, 293, 309, 192, 311, 293, 316, 293, 293,
        293, 305, 293, 209, 191, 293, 100, 293, 293, 195,
        114, 49, 293, 190, 293, 43, 95, 293, 293, 256,
        245, 293, 293, 293, 309, 192, 311, 293, 316, 305,
        293, 209, 293, 293, 100, 293, 293, 195, 114, 61,
        293, 293, 293, 293, 95, 293, 293, 256, 245, 293,
        40, 36, 309, 192, 311, 305, 316, 209, 293, 293,
        100, 293, 293, 195, 114, 69, 320, 318, 317, 314,
        95, 293, 293, 256, 245, 293, 293, 293, 309, 192,
        311, 293, 316, 293, 293, 305, 293, 209, 293, 293,
        100, 293, 293, 195, 114, 66, 293, 190, 293, 43,
        95, 293, 293, 256, 245, 293, 293, 293, 309, 192,
        311, 293, 316, 305, 293, 209, 293, 293, 100, 293,
        293, 195, 114, 54, 146, 293, 293, 293, 95, 293,
        293, 256, 245, 293, 40, 36, 309, 192, 311, 305,
        316, 209, 293, 293, 100, 293, 293, 195, 114, 53,
        320, 318, 317, 314, 95, 293, 293, 256, 245, 293,
        293, 293, 309, 192, 311, 293, 316, 293, 293, 305,
        293, 209, 293, 293, 100, 293, 293, 195, 114, 47,
        293, 190, 25, 43, 95, 293, 293, 256, 245, 293,
        293, 293, 309, 192, 311, 293, 316, 305, 293, 209,
        293, 293, 100, 293, 293, 195, 96, 59, 293, 293,
        293, 293, 95, 293, 293, 256, 245, 293, 40, 36,
        309, 192, 311, 305, 316, 209, 293, 293, 100, 293,
        293, 195, 114, 73, 320, 318, 317, 314, 95, 293,
        293, 256, 245, 293, 293, 293, 309, 192, 311, 293,
        316, 293, 293, 305, 293, 209, 293, 293, 100, 293,
        293, 195, 114, 71, 293, 190, 293, 43, 95, 293,
        293, 256, 245, 293, 293, 293, 309, 192, 311, 293,
        316, 305, 293, 209, 293, 293, 100, 293, 293, 185,
        102, 52, 293, 293, 293, 293, 95, 293, 293, 256,
        245, 234, 40, 36, 309, 192, 311, 305, 316, 209,
        293, 293, 100, 293, 293, 195, 93, 65, 320, 318,
        317, 314, 95, 293, 293, 256, 245, 293, 293, 293,
        309, 192, 311, 293, 316, 293, 293, 305, 293, 209,
        293, 293, 100, 293, 293, 195, 114, 46, 293, 190,
        293, 43, 95, 293, 293, 256, 245, 293, 293, 293,
        309, 192, 311, 293, 316, 305, 293, 209, 293, 293,
        100, 293, 293, 195, 114, 58, 293, 293, 293, 293,
        95, 293, 293, 256, 245, 223, 40, 36, 309, 192,
        311, 305, 316, 209, 293, 293, 100, 293, 293, 195,
        114, 50, 320, 318, 317, 314, 95, 293, 293, 256,
        245, 293, 293, 293, 309, 192, 311, 293, 316, 293,
        293, 305, 293, 209, 293, 293, 100, 293, 293, 195,
        114, 44, 293, 190, 293, 43, 95, 293, 293, 256,
        245, 293, 293, 293, 309, 192, 311, 293, 316, 305,
        293, 209, 293, 293, 100, 293, 293, 195, 114, 48,
        293, 293, 293, 293, 95, 293, 293, 256, 245, 293,
        40, 36, 309, 192, 311, 305, 316, 209, 293, 293,
        100, 293, 293, 195, 114, 72, 320, 318, 317, 314,
        95, 293, 293, 256, 245, 293, 293, 293, 309, 192,
        311, 293, 316, 293, 293, 305, 293, 209, 293, 293,
        100, 293, 293, 195, 114, 51, 293, 293, 293, 43,
        95, 293, 293, 256, 245, 293, 293, 293, 309, 192,
        311, 293, 316, 305, 293, 209, 293, 293, 100, 293,
        293, 195, 114, 67, 293, 293, 293, 293, 95, 293,
        293, 256, 245, 293, 40, 36, 309, 192, 311, 305,
        316, 209, 293, 293, 100, 293, 293, 186, 114, 57,
        320, 318, 317, 314, 95, 293, 293, 256, 245, 293,
        293, 293, 309, 192, 311, 293, 316, 293, 293, 305,
        293, 209, 293, 293, 100, 293, 293, 195, 114, 60,
        293, 293, 293, 293, 95, 293, 293, 256, 245, 293,
        293, 293, 309, 192, 311, 293, 316, 305, 293, 209,
        293, 293, 100, 293, 293, 195, 114, 62, 293, 293,
        293, 293, 95, 293, 293, 256, 245, 293, 293, 293,
        309, 192, 311, 305, 316, 209, 293, 293, 100, 293,
        293, 195, 114, 70, 293, 293, 293, 293, 95, 293,
        293, 256, 245, 293, 293, 293, 309, 192, 311, 293,
        316, 293, 293, 305, 293, 209, 293, 293, 100, 293,
        293, 195, 93, 55, 389, 389, 389, 293, 95, 293,
        293, 256, 245, 293, 293, 293, 309, 192, 311, 293,
        316, 305, 293, 209, 293, 293, 100, 293, 293, 195,
        118, 293, 293, 293, 293, 293, 95, 293, 293, 423,
        304, 389, 389, 293, 309, 192, 311, 190, 316, 43,
        423, 190, 293, 43, 293, 293, 293, 389, 389, 389,
        389, 293, 293, 293, 293, 293, 293, 305, 293, 209,
        293, 29, 100, 14, 293, 195, 123, 14, 293, 17,
        293, 293, 95, 17, 40, 36, 243, 293, 40, 36,
        309, 192, 311, 293, 316, 293, 293, 293, 293, 293,
        320, 318, 317, 314, 320, 318, 317, 314, 204, 293,
        293, 293, 293, 305, 293, 209, 293, 452, 100, 452,
        293, 195, 121, 452, 436, 293, 293, 293, 95, 293,
        293, 293, 293, 293, 293, 293, 309, 192, 311, 305,
        316, 209, 293, 190, 100, 43, 293, 195, 112, 293,
        436, 293, 293, 436, 95, 452, 174, 436, 313, 293,
        293, 293, 309, 192, 311, 293, 316, 305, 293, 209,
        293, 293, 100, 140, 293, 195, 111, 167, 293, 293,
        40, 36, 95, 265, 293, 293, 39, 28, 307, 293,
        309, 192, 311, 293, 316, 293, 320, 318, 317, 314,
        293, 175, 305, 293, 209, 293, 293, 100, 293, 293,
        195, 119, 293, 305, 293, 209, 293, 95, 100, 293,
        293, 195, 115, 293, 293, 309, 192, 311, 95, 316,
        293, 293, 293, 293, 293, 293, 309, 192, 311, 293,
        316, 305, 190, 209, 43, 293, 100, 293, 293, 195,
        120, 293, 293, 293, 293, 293, 95, 293, 293, 293,
        293, 293, 293, 293, 309, 192, 311, 293, 316, 293,
        190, 156, 43, 293, 190, 167, 43, 293, 293, 40,
        36, 265, 293, 235, 39, 28, 307, 288, 293, 293,
        293, 293, 293, 319, 293, 320, 318, 317, 314, 175,
        190, 293, 43, 293, 190, 293, 43, 40, 36, 293,
        293, 40, 36, 242, 293, 293, 293, 176, 293, 293,
        293, 293, 293, 320, 318, 317, 314, 320, 318, 317,
        314, 293, 293, 293, 293, 293, 293, 40, 36, 293,
        293, 40, 36, 293, 293, 293, 293, 293, 293, 293,
        293, 293, 293, 320, 318, 317, 314, 320, 318, 317,
        314, 293, 190, 293, 293, 293, 293, 293, 383, 293,
        293, 293, 293, 293, 293, 347, 383, 293, 383, 224,
        293, 383, 293, 293, 293, 293, 293, 383, 14, 383,
        293, 383, 293, 252, 17, 12, 293, 423, 205, 251,
        293, 293, 293, 293, 293, 293, 293, 293, 423, 14,
        293, 145, 293, 293, 293, 17,
    );
    static public $yy_lookahead     = array(
        3, 13, 65, 70, 67, 11, 73, 13, 11, 12,
        13, 17, 15, 80, 17, 81, 19, 20, 21, 93,
        27, 2, 89, 26, 36, 92, 33, 30, 31, 32,
        11, 34, 13, 36, 35, 16, 17, 18, 41, 42,
        43, 44, 105, 46, 3, 48, 22, 50, 51, 52,
        53, 52, 11, 12, 13, 58, 15, 15, 17, 35,
        19, 20, 21, 44, 64, 2, 47, 26, 49, 93,
        51, 30, 31, 32, 11, 34, 13, 36, 36, 16,
        17, 18, 41, 42, 43, 44, 91, 46, 3, 48,
        17, 50, 51, 98, 53, 53, 11, 12, 13, 58,
        15, 23, 17, 100, 19, 20, 21, 44, 36, 2,
        47, 26, 49, 76, 51, 30, 31, 32, 11, 34,
        13, 36, 49, 45, 17, 18, 41, 42, 43, 44,
        52, 46, 3, 48, 80, 50, 51, 100, 53, 44,
        11, 12, 13, 58, 15, 23, 17, 52, 19, 20,
        21, 44, 98, 2, 47, 26, 49, 1, 51, 30,
        31, 32, 11, 34, 13, 36, 101, 45, 17, 18,
        41, 42, 43, 44, 2, 46, 3, 48, 81, 50,
        51, 59, 53, 27, 11, 12, 13, 58, 15, 33,
        17, 72, 19, 20, 21, 44, 9, 10, 47, 26,
        49, 82, 51, 30, 31, 32, 11, 34, 13, 36,
        1, 1, 17, 18, 41, 42, 43, 44, 44, 46,
        3, 48, 1, 50, 51, 51, 53, 18, 11, 12,
        13, 58, 15, 44, 17, 27, 19, 20, 21, 44,
        51, 33, 47, 26, 49, 76, 51, 30, 31, 32,
        15, 34, 17, 36, 85, 86, 87, 93, 41, 42,
        43, 44, 52, 46, 3, 48, 81, 50, 51, 100,
        53, 52, 11, 12, 13, 58, 15, 8, 17, 10,
        19, 20, 21, 48, 11, 50, 13, 26, 53, 69,
        17, 30, 31, 32, 13, 34, 15, 36, 17, 16,
        27, 18, 41, 42, 43, 44, 33, 46, 3, 48,
        50, 50, 51, 93, 53, 34, 11, 12, 13, 58,
        15, 11, 17, 13, 19, 20, 21, 17, 17, 16,
        47, 26, 36, 36, 53, 30, 31, 32, 13, 34,
        15, 36, 17, 47, 47, 69, 41, 42, 43, 44,
        50, 46, 3, 48, 24, 50, 51, 44, 53, 49,
        11, 12, 13, 58, 15, 11, 17, 13, 19, 20,
        21, 17, 96, 97, 35, 26, 37, 36, 53, 30,
        31, 32, 15, 34, 17, 36, 16, 16, 72, 18,
        41, 42, 43, 44, 91, 46, 3, 48, 82, 50,
        51, 98, 53, 49, 11, 12, 13, 58, 15, 11,
        17, 13, 19, 20, 21, 17, 100, 50, 47, 26,
        53, 76, 36, 30, 31, 32, 65, 34, 67, 36,
        44, 17, 72, 47, 41, 42, 43, 44, 52, 46,
        3, 48, 82, 50, 51, 100, 53, 49, 11, 12,
        13, 58, 15, 11, 17, 13, 19, 20, 21, 17,
        100, 1, 17, 26, 15, 104, 105, 30, 31, 32,
        29, 34, 18, 36, 35, 52, 37, 36, 41, 42,
        43, 44, 23, 46, 16, 48, 17, 50, 47, 29,
        53, 65, 66, 67, 68, 58, 70, 71, 44, 73,
        74, 75, 53, 15, 45, 51, 80, 76, 17, 83,
        84, 40, 44, 36, 88, 89, 90, 14, 92, 51,
        65, 66, 67, 68, 47, 70, 71, 1, 73, 74,
        75, 100, 101, 76, 94, 80, 96, 97, 83, 84,
        14, 53, 70, 88, 89, 90, 65, 92, 67, 77,
        78, 70, 80, 27, 73, 74, 75, 100, 72, 33,
        16, 80, 76, 34, 83, 84, 72, 23, 82, 88,
        89, 90, 65, 92, 67, 68, 82, 70, 71, 44,
        73, 74, 75, 102, 103, 14, 100, 80, 72, 95,
        83, 84, 14, 17, 16, 88, 89, 90, 82, 92,
        4, 5, 6, 7, 8, 27, 9, 11, 12, 13,
        35, 33, 37, 34, 36, 19, 20, 21, 15, 72,
        17, 17, 26, 76, 70, 47, 30, 31, 32, 82,
        65, 77, 67, 72, 80, 70, 17, 14, 73, 74,
        75, 17, 77, 82, 37, 80, 23, 100, 83, 84,
        27, 1, 15, 88, 89, 90, 33, 92, 17, 5,
        93, 93, 95, 95, 14, 11, 12, 13, 45, 15,
        96, 97, 70, 19, 20, 21, 65, 27, 67, 77,
        26, 5, 80, 33, 30, 31, 32, 11, 12, 13,
        72, 15, 1, 2, 76, 19, 20, 21, 18, 70,
        82, 79, 26, 85, 86, 87, 30, 31, 32, 80,
        97, 72, 58, 59, 65, 1, 67, 3, 100, 70,
        72, 82, 73, 74, 75, 82, 77, 47, 94, 80,
        82, 80, 83, 84, 58, 59, 22, 88, 89, 90,
        65, 92, 67, 95, 70, 70, 93, 73, 73, 74,
        75, 80, 38, 39, 80, 80, 96, 97, 83, 84,
        1, 61, 62, 88, 89, 90, 92, 92, 54, 55,
        56, 57, 65, 14, 67, 63, 64, 70, 103, 93,
        73, 74, 75, 80, 18, 14, 27, 80, 95, 93,
        83, 84, 33, 106, 23, 88, 89, 90, 27, 92,
        65, 93, 67, 106, 33, 70, 99, 106, 73, 74,
        75, 106, 106, 106, 106, 80, 45, 106, 83, 84,
        106, 106, 106, 88, 89, 90, 106, 92, 106, 106,
        65, 106, 67, 106, 99, 70, 106, 106, 73, 74,
        75, 106, 106, 106, 106, 80, 106, 106, 83, 84,
        106, 106, 106, 88, 89, 90, 106, 92, 106, 106,
        106, 65, 106, 67, 99, 106, 70, 106, 106, 73,
        74, 75, 106, 1, 106, 3, 80, 106, 106, 83,
        84, 106, 106, 106, 88, 89, 90, 106, 92, 65,
        106, 67, 106, 106, 70, 106, 106, 73, 74, 75,
        106, 106, 106, 106, 80, 106, 106, 83, 84, 106,
        38, 39, 88, 89, 90, 65, 92, 67, 106, 106,
        70, 106, 106, 73, 74, 75, 54, 55, 56, 57,
        80, 59, 106, 83, 84, 106, 106, 106, 88, 89,
        90, 106, 92, 106, 106, 65, 106, 67, 106, 106,
        70, 106, 106, 73, 74, 75, 106, 1, 106, 3,
        80, 106, 106, 83, 84, 106, 106, 106, 88, 89,
        90, 106, 92, 65, 106, 67, 106, 106, 70, 106,
        106, 73, 74, 75, 28, 106, 106, 106, 80, 106,
        106, 83, 84, 106, 38, 39, 88, 89, 90, 65,
        92, 67, 106, 106, 70, 106, 106, 73, 74, 75,
        54, 55, 56, 57, 80, 106, 106, 83, 84, 106,
        106, 106, 88, 89, 90, 106, 92, 106, 106, 65,
        106, 67, 106, 106, 70, 106, 106, 73, 74, 75,
        106, 1, 2, 3, 80, 106, 106, 83, 84, 106,
        106, 106, 88, 89, 90, 106, 92, 65, 106, 67,
        106, 106, 70, 106, 106, 73, 74, 75, 106, 106,
        106, 106, 80, 106, 106, 83, 84, 106, 38, 39,
        88, 89, 90, 65, 92, 67, 106, 106, 70, 106,
        106, 73, 74, 75, 54, 55, 56, 57, 80, 106,
        106, 83, 84, 106, 106, 106, 88, 89, 90, 106,
        92, 106, 106, 65, 106, 67, 106, 106, 70, 106,
        106, 73, 74, 75, 106, 1, 106, 3, 80, 106,
        106, 83, 84, 106, 106, 106, 88, 89, 90, 106,
        92, 65, 106, 67, 106, 106, 70, 106, 106, 73,
        74, 75, 106, 106, 106, 106, 80, 106, 106, 83,
        84, 37, 38, 39, 88, 89, 90, 65, 92, 67,
        106, 106, 70, 106, 106, 73, 74, 75, 54, 55,
        56, 57, 80, 106, 106, 83, 84, 106, 106, 106,
        88, 89, 90, 106, 92, 106, 106, 65, 106, 67,
        106, 106, 70, 106, 106, 73, 74, 75, 106, 1,
        106, 3, 80, 106, 106, 83, 84, 106, 106, 106,
        88, 89, 90, 106, 92, 65, 106, 67, 106, 106,
        70, 106, 106, 73, 74, 75, 106, 106, 106, 106,
        80, 106, 106, 83, 84, 37, 38, 39, 88, 89,
        90, 65, 92, 67, 106, 106, 70, 106, 106, 73,
        74, 75, 54, 55, 56, 57, 80, 106, 106, 83,
        84, 106, 106, 106, 88, 89, 90, 106, 92, 106,
        106, 65, 106, 67, 106, 106, 70, 106, 106, 73,
        74, 75, 106, 1, 106, 3, 80, 106, 106, 83,
        84, 106, 106, 106, 88, 89, 90, 106, 92, 65,
        106, 67, 106, 106, 70, 106, 106, 73, 74, 75,
        106, 106, 106, 106, 80, 106, 106, 83, 84, 106,
        38, 39, 88, 89, 90, 65, 92, 67, 106, 106,
        70, 106, 106, 73, 74, 75, 54, 55, 56, 57,
        80, 106, 106, 83, 84, 106, 106, 106, 88, 89,
        90, 106, 92, 106, 106, 65, 106, 67, 106, 106,
        70, 106, 106, 73, 74, 75, 106, 106, 106, 3,
        80, 106, 106, 83, 84, 106, 106, 106, 88, 89,
        90, 106, 92, 65, 106, 67, 106, 106, 70, 106,
        106, 73, 74, 75, 106, 106, 106, 106, 80, 106,
        106, 83, 84, 106, 38, 39, 88, 89, 90, 65,
        92, 67, 106, 106, 70, 106, 106, 73, 74, 75,
        54, 55, 56, 57, 80, 106, 106, 83, 84, 106,
        106, 106, 88, 89, 90, 106, 92, 106, 106, 65,
        106, 67, 106, 106, 70, 106, 106, 73, 74, 75,
        106, 106, 106, 106, 80, 106, 106, 83, 84, 106,
        106, 106, 88, 89, 90, 106, 92, 65, 106, 67,
        106, 106, 70, 106, 106, 73, 74, 75, 106, 106,
        106, 106, 80, 106, 106, 83, 84, 106, 106, 106,
        88, 89, 90, 65, 92, 67, 106, 106, 70, 106,
        106, 73, 74, 75, 106, 106, 106, 106, 80, 106,
        106, 83, 84, 106, 106, 106, 88, 89, 90, 106,
        92, 106, 106, 65, 106, 67, 106, 106, 70, 106,
        106, 73, 74, 75, 1, 2, 3, 106, 80, 106,
        106, 83, 84, 106, 106, 106, 88, 89, 90, 106,
        92, 65, 106, 67, 106, 106, 70, 106, 106, 73,
        74, 106, 106, 106, 106, 106, 80, 106, 106, 36,
        84, 38, 39, 106, 88, 89, 90, 1, 92, 3,
        47, 1, 106, 3, 106, 106, 106, 54, 55, 56,
        57, 106, 106, 106, 106, 106, 106, 65, 106, 67,
        106, 25, 70, 27, 106, 73, 74, 27, 106, 33,
        106, 106, 80, 33, 38, 39, 84, 106, 38, 39,
        88, 89, 90, 106, 92, 106, 106, 106, 106, 106,
        54, 55, 56, 57, 54, 55, 56, 57, 2, 106,
        106, 106, 106, 65, 106, 67, 106, 11, 70, 13,
        106, 73, 74, 17, 18, 106, 106, 106, 80, 106,
        106, 106, 106, 106, 106, 106, 88, 89, 90, 65,
        92, 67, 106, 1, 70, 3, 106, 73, 74, 106,
        44, 106, 106, 47, 80, 49, 14, 51, 52, 106,
        106, 106, 88, 89, 90, 106, 92, 65, 106, 67,
        106, 106, 70, 72, 106, 73, 74, 76, 106, 106,
        38, 39, 80, 82, 106, 106, 85, 86, 87, 106,
        88, 89, 90, 106, 92, 106, 54, 55, 56, 57,
        106, 100, 65, 106, 67, 106, 106, 70, 106, 106,
        73, 74, 106, 65, 106, 67, 106, 80, 70, 106,
        106, 73, 74, 106, 106, 88, 89, 90, 80, 92,
        106, 106, 106, 106, 106, 106, 88, 89, 90, 106,
        92, 65, 1, 67, 3, 106, 70, 106, 106, 73,
        74, 106, 106, 106, 106, 106, 80, 106, 106, 106,
        106, 106, 106, 106, 88, 89, 90, 106, 92, 106,
        1, 72, 3, 106, 1, 76, 3, 106, 106, 38,
        39, 82, 106, 14, 85, 86, 87, 14, 106, 106,
        106, 106, 106, 52, 106, 54, 55, 56, 57, 100,
        1, 106, 3, 106, 1, 106, 3, 38, 39, 106,
        106, 38, 39, 14, 106, 106, 106, 14, 106, 106,
        106, 106, 106, 54, 55, 56, 57, 54, 55, 56,
        57, 106, 106, 106, 106, 106, 106, 38, 39, 106,
        106, 38, 39, 106, 106, 106, 106, 106, 106, 106,
        106, 106, 106, 54, 55, 56, 57, 54, 55, 56,
        57, 106, 1, 106, 106, 106, 106, 106, 14, 106,
        106, 106, 106, 106, 106, 14, 22, 106, 24, 18,
        106, 27, 106, 106, 106, 106, 106, 33, 27, 35,
        106, 37, 106, 11, 33, 13, 106, 36, 44, 17,
        106, 106, 106, 106, 106, 106, 106, 106, 47, 27,
        106, 29, 106, 106, 106, 33,
    );
    static public $yy_shift_ofst    = array(
        -13, 393, 393, 305, 85, 85, 85, 85, 349, 305,
        349, -3, 85, 85, 129, 85, 217, 85, 173, 85,
        85, 85, 129, 261, 85, 85, 85, 85, 85, 85,
        85, 85, 85, 85, 85, 85, 41, 41, 437, 437,
        437, 437, 437, 437, 1586, 1590, 1590, 1040, 1843, 1839,
        1208, 1124, 1781, 1682, 714, 956, 1813, 872, 1809, 1292,
        1292, 1292, 1292, 1292, 1292, 1292, 1292, 1292, 1292, 1292,
        1292, 1292, 1376, 1376, 235, 676, 1901, 367, 156, 42,
        654, 1922, 273, 42, 371, 42, 156, 454, 156, 691,
        596, 63, 325, 759, 650, 398, 526, -6, 283, -6,
        680, 209, 210, -7, 603, 603, 460, 208, -7, 488,
        -7, 221, 221, 766, 221, 221, 766, 221, 221, 221,
        -13, -13, -13, -13, 1646, 19, 107, 151, 195, 281,
        310, 442, 468, -7, -7, -7, -7, 174, 174, 544,
        -7, 174, 174, -7, -12, 449, 449, -7, 174, -7,
        174, 189, -7, 174, -7, -7, -7, -7, 189, 174,
        766, 766, 766, 221, 221, 172, 221, 221, 172, 72,
        221, -13, -13, -13, -13, -13, -13, 1543, 1894, 578,
        623, 771, 354, 386, 441, 78, 122, -1, 95, 296,
        73, 339, 297, 477, 313, 459, 24, 439, 575, 269,
        187, 641, 604, 597, 576, 529, 535, 619, 260, 571,
        607, 637, 624, 579, 503, 491, 370, 330, 300, 219,
        311, 341, 414, 471, 469, 423, 72, 445,
    );
    static public $yy_reduce_ofst   = array(
        700, 455, 426, 481, 507, 765, 707, 735, 565, 675,
        649, 1076, 1160, 1186, 1102, 1244, 964, 992, 1018, 1048,
        1216, 1438, 1468, 1384, 1412, 1270, 1300, 1354, 1328, 1132,
        824, 934, 908, 880, 850, 796, 1496, 1542, 1642, 1614,
        1677, 1716, 1688, 1588, 1739, 1641, 618, 169, 169, 169,
        169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
        169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
        169, 169, 169, 169, -67, 361, 486, 674, 547, 472,
        -63, 494, 648, 602, 276, 554, 316, 440, 360, 431,
        611, 220, 54, 37, 37, 568, 37, 567, 574, 568,
        574, 345, 37, 119, 303, -5, 37, 561, 516, 629,
        639, 37, 37, 574, 37, 37, 660, 457, 37, 37,
        37, 37, 712, 37, 686, 686, 686, 686, 686, 703,
        693, 686, 686, 643, 643, 643, 643, 634, 634, 622,
        643, 634, 634, 643, 653, 671, 651, 643, 634, 643,
        634, 696, 643, 634, 643, 643, 643, 643, 708, 634,
        613, 613, 613, 3, 3, 65, 3, 3, 65, 164,
        3, 97, 185, 0, -24, -66, -74,
    );
    static public $yyExpectedTokens = array(
        array(),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 53, 58,),
        array(3, 11, 12, 13, 15, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 53, 58,),
        array(1, 3, 25, 27, 33, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 27, 33, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 27, 33, 38, 39, 54, 55, 56, 57,),
        array(1, 2, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 14, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 14, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 37, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 37, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 52, 54, 55, 56, 57,),
        array(1, 3, 14, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 22, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 28, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 14, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57, 59,),
        array(1, 3, 14, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(1, 3, 38, 39, 54, 55, 56, 57,),
        array(3, 38, 39, 54, 55, 56, 57,),
        array(3, 38, 39, 54, 55, 56, 57,),
        array(15, 17, 48, 50, 53,),
        array(5, 11, 12, 13, 15, 19, 20, 21, 26, 30, 31, 32, 58, 59,),
        array(1, 14, 18, 27, 33, 36, 47,),
        array(15, 17, 50, 53,),
        array(1, 27, 33,),
        array(15, 36, 53,),
        array(5, 11, 12, 13, 15, 19, 20, 21, 26, 30, 31, 32, 58, 59,),
        array(11, 13, 17, 27, 29, 33,),
        array(11, 13, 17, 27, 33,),
        array(15, 36, 53,),
        array(16, 18, 47,),
        array(15, 36, 53,),
        array(1, 27, 33,),
        array(18, 44, 51,),
        array(1, 27, 33,),
        array(1, 2,),
        array(4, 5, 6, 7, 8, 11, 12, 13, 19, 20, 21, 26, 30, 31, 32,),
        array(2, 11, 13, 16, 17, 18, 44, 47, 49, 51,),
        array(13, 15, 17, 53,),
        array(1, 14, 27, 33,),
        array(1, 14, 27, 33,),
        array(11, 13, 17, 49,),
        array(1, 14, 27, 33,),
        array(11, 13, 17,),
        array(16, 18, 47,),
        array(11, 13, 17,),
        array(18, 47,),
        array(1, 18,),
        array(1, 52,),
        array(27, 33,),
        array(15, 17,),
        array(15, 17,),
        array(1, 29,),
        array(27, 33,),
        array(27, 33,),
        array(15, 53,),
        array(27, 33,),
        array(1,),
        array(1,),
        array(18,),
        array(1,),
        array(1,),
        array(18,),
        array(1,),
        array(1,),
        array(1,),
        array(),
        array(),
        array(),
        array(),
        array(2, 11, 13, 17, 18, 44, 47, 49, 51, 52,),
        array(2, 11, 13, 16, 17, 18, 44, 47, 49, 51,),
        array(2, 11, 13, 17, 18, 44, 47, 49, 51,),
        array(2, 11, 13, 17, 18, 44, 47, 49, 51,),
        array(11, 13, 17, 18, 44, 47, 49, 51,),
        array(13, 15, 17, 34, 53,),
        array(11, 13, 17, 49,),
        array(11, 13, 17,),
        array(16, 44, 51,),
        array(27, 33,),
        array(27, 33,),
        array(27, 33,),
        array(27, 33,),
        array(44, 51,),
        array(44, 51,),
        array(16, 23,),
        array(27, 33,),
        array(44, 51,),
        array(44, 51,),
        array(27, 33,),
        array(13, 36,),
        array(15, 53,),
        array(15, 53,),
        array(27, 33,),
        array(44, 51,),
        array(27, 33,),
        array(44, 51,),
        array(44, 51,),
        array(27, 33,),
        array(44, 51,),
        array(27, 33,),
        array(27, 33,),
        array(27, 33,),
        array(27, 33,),
        array(44, 51,),
        array(44, 51,),
        array(18,),
        array(18,),
        array(18,),
        array(1,),
        array(1,),
        array(2,),
        array(1,),
        array(1,),
        array(2,),
        array(36,),
        array(1,),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(1, 2, 3, 36, 38, 39, 47, 54, 55, 56, 57,),
        array(14, 22, 24, 27, 33, 35, 37, 44,),
        array(14, 16, 27, 33, 36, 47,),
        array(14, 23, 27, 33, 45,),
        array(14, 23, 27, 33, 45,),
        array(11, 13, 17, 49,),
        array(36, 44, 47, 52,),
        array(29, 36, 47,),
        array(23, 45, 52,),
        array(23, 45, 59,),
        array(35, 52,),
        array(44, 52,),
        array(36, 47,),
        array(17, 49,),
        array(35, 37,),
        array(36, 47,),
        array(36, 47,),
        array(16, 44,),
        array(23, 45,),
        array(22, 35,),
        array(35, 37,),
        array(35, 37,),
        array(8, 10,),
        array(9, 10,),
        array(17,),
        array(17,),
        array(9,),
        array(17,),
        array(34,),
        array(44,),
        array(17,),
        array(50,),
        array(14,),
        array(37,),
        array(15,),
        array(17,),
        array(34,),
        array(14,),
        array(17,),
        array(16,),
        array(24,),
        array(50,),
        array(52,),
        array(17,),
        array(36,),
        array(17,),
        array(40,),
        array(17,),
        array(52,),
        array(36,),
        array(17,),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
    );
    static public $yy_default       = array(
        333, 507, 507, 492, 507, 471, 471, 471, 507, 507,
        507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
        507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
        507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
        507, 507, 507, 507, 373, 352, 373, 507, 507, 507,
        507, 507, 507, 507, 507, 378, 345, 507, 507, 375,
        384, 380, 469, 470, 345, 378, 493, 395, 495, 494,
        385, 357, 400, 399, 507, 507, 411, 507, 373, 507,
        507, 373, 373, 507, 426, 507, 373, 483, 373, 364,
        322, 425, 507, 387, 387, 436, 387, 436, 426, 436,
        426, 367, 387, 373, 507, 507, 387, 373, 354, 507,
        373, 404, 394, 426, 387, 403, 480, 369, 398, 390,
        402, 391, 331, 478, 425, 425, 425, 425, 425, 507,
        438, 436, 452, 346, 349, 350, 348, 434, 433, 507,
        353, 464, 462, 356, 436, 507, 507, 362, 461, 342,
        430, 429, 363, 463, 361, 355, 359, 360, 431, 432,
        484, 458, 481, 370, 368, 473, 420, 393, 472, 436,
        365, 477, 477, 331, 436, 477, 436, 411, 407, 411,
        401, 401, 437, 411, 411, 401, 401, 507, 407, 411,
        507, 507, 507, 421, 407, 401, 507, 507, 507, 329,
        507, 507, 507, 507, 507, 409, 407, 507, 507, 507,
        507, 507, 507, 507, 507, 507, 507, 381, 507, 507,
        507, 482, 507, 413, 507, 416, 452, 507, 386, 443,
        451, 445, 444, 466, 413, 457, 358, 452, 448, 382,
        446, 374, 442, 479, 467, 392, 475, 405, 414, 474,
        366, 455, 456, 476, 415, 423, 388, 389, 406, 441,
        440, 424, 435, 439, 454, 372, 328, 330, 332, 327,
        326, 323, 324, 325, 334, 335, 341, 371, 351, 339,
        338, 336, 337, 408, 410, 496, 497, 498, 504, 503,
        468, 340, 459, 501, 500, 489, 491, 490, 499, 506,
        502, 505, 453, 460, 397, 419, 422, 396, 418, 412,
        416, 417, 449, 447, 488, 427, 428, 487, 486, 450,
        485, 465,
    );
    public static $yyFallback       = array();
    public static $yyRuleName       = array(
        'start ::= template',
        'template ::= template PHP',
        'template ::= template TEXT',
        'template ::= template STRIPON',
        'template ::= template STRIPOFF',
        'template ::= template LITERALSTART literal_e2 LITERALEND',
        'literal_e2 ::= literal_e1 LITERALSTART literal_e1 LITERALEND',
        'literal_e2 ::= literal_e1',
        'literal_e1 ::= literal_e1 LITERAL',
        'literal_e1 ::=',
        'template ::= template smartytag',
        'template ::=',
        'smartytag ::= SIMPELOUTPUT',
        'smartytag ::= SIMPLETAG',
        'smartytag ::= LDEL tagbody RDEL',
        'smartytag ::= tag RDEL',
        'tagbody ::= outattr',
        'tagbody ::= DOLLARID eqoutattr',
        'tagbody ::= varindexed eqoutattr',
        'eqoutattr ::= EQUAL outattr',
        'outattr ::= output attributes',
        'output ::= variable',
        'output ::= value',
        'output ::= expr',
        'tag ::= LDEL ID attributes',
        'tag ::= LDEL ID',
        'tag ::= LDEL ID modifierlist attributes',
        'tag ::= LDEL ID PTR ID attributes',
        'tag ::= LDEL ID PTR ID modifierlist attributes',
        'tag ::= LDELMAKENOCACHE DOLLARID',
        'tag ::= LDELIF expr',
        'tag ::= LDELIF expr attributes',
        'tag ::= LDELIF statement',
        'tag ::= LDELIF statement attributes',
        'tag ::= LDELFOR statements SEMICOLON expr SEMICOLON varindexed foraction attributes',
        'foraction ::= EQUAL expr',
        'foraction ::= INCDEC',
        'tag ::= LDELFOR statement TO expr attributes',
        'tag ::= LDELFOR statement TO expr STEP expr attributes',
        'tag ::= LDELFOREACH SPACE expr AS varvar attributes',
        'tag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes',
        'tag ::= LDELFOREACH attributes',
        'tag ::= LDELSETFILTER ID modparameters',
        'tag ::= LDELSETFILTER ID modparameters modifierlist',
        'smartytag ::= CLOSETAG',
        'tag ::= LDELSLASH ID',
        'tag ::= LDELSLASH ID modifierlist',
        'tag ::= LDELSLASH ID PTR ID',
        'tag ::= LDELSLASH ID PTR ID modifierlist',
        'attributes ::= attributes attribute',
        'attributes ::= attribute',
        'attributes ::=',
        'attribute ::= SPACE ID EQUAL ID',
        'attribute ::= ATTR expr',
        'attribute ::= ATTR value',
        'attribute ::= SPACE ID',
        'attribute ::= SPACE expr',
        'attribute ::= SPACE value',
        'attribute ::= SPACE INTEGER EQUAL expr',
        'statements ::= statement',
        'statements ::= statements COMMA statement',
        'statement ::= DOLLARID EQUAL INTEGER',
        'statement ::= DOLLARID EQUAL expr',
        'statement ::= varindexed EQUAL expr',
        'statement ::= OPENP statement CLOSEP',
        'expr ::= value',
        'expr ::= ternary',
        'expr ::= DOLLARID COLON ID',
        'expr ::= expr MATH value',
        'expr ::= expr UNIMATH value',
        'expr ::= array',
        'expr ::= expr modifierlist',
        'expr ::= expr tlop value',
        'expr ::= expr lop expr',
        'expr ::= expr scond',
        'expr ::= expr ISIN array',
        'expr ::= expr ISIN value',
        'ternary ::= OPENP expr CLOSEP QMARK DOLLARID COLON expr',
        'ternary ::= OPENP expr CLOSEP QMARK expr COLON expr',
        'value ::= variable',
        'value ::= UNIMATH value',
        'value ::= NOT value',
        'value ::= TYPECAST value',
        'value ::= variable INCDEC',
        'value ::= HEX',
        'value ::= INTEGER',
        'value ::= INTEGER DOT INTEGER',
        'value ::= INTEGER DOT',
        'value ::= DOT INTEGER',
        'value ::= ID',
        'value ::= function',
        'value ::= OPENP expr CLOSEP',
        'value ::= variable INSTANCEOF ns1',
        'value ::= variable INSTANCEOF variable',
        'value ::= SINGLEQUOTESTRING',
        'value ::= doublequoted_with_quotes',
        'value ::= varindexed DOUBLECOLON static_class_access',
        'value ::= smartytag',
        'value ::= value modifierlist',
        'value ::= NAMESPACE',
        'value ::= ns1 DOUBLECOLON static_class_access',
        'ns1 ::= ID',
        'ns1 ::= NAMESPACE',
        'variable ::= DOLLARID',
        'variable ::= varindexed',
        'variable ::= varvar AT ID',
        'variable ::= object',
        'variable ::= HATCH ID HATCH',
        'variable ::= HATCH ID HATCH arrayindex',
        'variable ::= HATCH variable HATCH',
        'variable ::= HATCH variable HATCH arrayindex',
        'varindexed ::= DOLLARID arrayindex',
        'varindexed ::= varvar arrayindex',
        'arrayindex ::= arrayindex indexdef',
        'arrayindex ::=',
        'indexdef ::= DOT DOLLARID',
        'indexdef ::= DOT varvar',
        'indexdef ::= DOT varvar AT ID',
        'indexdef ::= DOT ID',
        'indexdef ::= DOT INTEGER',
        'indexdef ::= DOT LDEL expr RDEL',
        'indexdef ::= OPENB ID CLOSEB',
        'indexdef ::= OPENB ID DOT ID CLOSEB',
        'indexdef ::= OPENB SINGLEQUOTESTRING CLOSEB',
        'indexdef ::= OPENB INTEGER CLOSEB',
        'indexdef ::= OPENB DOLLARID CLOSEB',
        'indexdef ::= OPENB variable CLOSEB',
        'indexdef ::= OPENB value CLOSEB',
        'indexdef ::= OPENB expr CLOSEB',
        'indexdef ::= OPENB CLOSEB',
        'varvar ::= DOLLARID',
        'varvar ::= DOLLAR',
        'varvar ::= varvar varvarele',
        'varvarele ::= ID',
        'varvarele ::= SIMPELOUTPUT',
        'varvarele ::= LDEL expr RDEL',
        'object ::= varindexed objectchain',
        'objectchain ::= objectelement',
        'objectchain ::= objectchain objectelement',
        'objectelement ::= PTR ID arrayindex',
        'objectelement ::= PTR varvar arrayindex',
        'objectelement ::= PTR LDEL expr RDEL arrayindex',
        'objectelement ::= PTR ID LDEL expr RDEL arrayindex',
        'objectelement ::= PTR method',
        'function ::= ns1 OPENP params CLOSEP',
        'method ::= ID OPENP params CLOSEP',
        'method ::= DOLLARID OPENP params CLOSEP',
        'params ::= params COMMA expr',
        'params ::= expr',
        'params ::=',
        'modifierlist ::= modifierlist modifier modparameters',
        'modifierlist ::= modifier modparameters',
        'modifier ::= VERT AT ID',
        'modifier ::= VERT ID',
        'modparameters ::= modparameters modparameter',
        'modparameters ::=',
        'modparameter ::= COLON value',
        'modparameter ::= COLON array',
        'static_class_access ::= method',
        'static_class_access ::= method objectchain',
        'static_class_access ::= ID',
        'static_class_access ::= DOLLARID arrayindex',
        'static_class_access ::= DOLLARID arrayindex objectchain',
        'lop ::= LOGOP',
        'lop ::= SLOGOP',
        'tlop ::= TLOGOP',
        'scond ::= SINGLECOND',
        'array ::= OPENB arrayelements CLOSEB',
        'arrayelements ::= arrayelement',
        'arrayelements ::= arrayelements COMMA arrayelement',
        'arrayelements ::=',
        'arrayelement ::= value APTR expr',
        'arrayelement ::= ID APTR expr',
        'arrayelement ::= expr',
        'doublequoted_with_quotes ::= QUOTE QUOTE',
        'doublequoted_with_quotes ::= QUOTE doublequoted QUOTE',
        'doublequoted ::= doublequoted doublequotedcontent',
        'doublequoted ::= doublequotedcontent',
        'doublequotedcontent ::= BACKTICK variable BACKTICK',
        'doublequotedcontent ::= BACKTICK expr BACKTICK',
        'doublequotedcontent ::= DOLLARID',
        'doublequotedcontent ::= LDEL variable RDEL',
        'doublequotedcontent ::= LDEL expr RDEL',
        'doublequotedcontent ::= smartytag',
        'doublequotedcontent ::= TEXT',
    );
    public static $yyRuleInfo       = array(
        array(0 => 61, 1 => 1),
        array(0 => 62, 1 => 2),
        array(0 => 62, 1 => 2),
        array(0 => 62, 1 => 2),
        array(0 => 62, 1 => 2),
        array(0 => 62, 1 => 4),
        array(0 => 63, 1 => 4),
        array(0 => 63, 1 => 1),
        array(0 => 64, 1 => 2),
        array(0 => 64, 1 => 0),
        array(0 => 62, 1 => 2),
        array(0 => 62, 1 => 0),
        array(0 => 65, 1 => 1),
        array(0 => 65, 1 => 1),
        array(0 => 65, 1 => 3),
        array(0 => 65, 1 => 2),
        array(0 => 66, 1 => 1),
        array(0 => 66, 1 => 2),
        array(0 => 66, 1 => 2),
        array(0 => 69, 1 => 2),
        array(0 => 68, 1 => 2),
        array(0 => 71, 1 => 1),
        array(0 => 71, 1 => 1),
        array(0 => 71, 1 => 1),
        array(0 => 67, 1 => 3),
        array(0 => 67, 1 => 2),
        array(0 => 67, 1 => 4),
        array(0 => 67, 1 => 5),
        array(0 => 67, 1 => 6),
        array(0 => 67, 1 => 2),
        array(0 => 67, 1 => 2),
        array(0 => 67, 1 => 3),
        array(0 => 67, 1 => 2),
        array(0 => 67, 1 => 3),
        array(0 => 67, 1 => 8),
        array(0 => 79, 1 => 2),
        array(0 => 79, 1 => 1),
        array(0 => 67, 1 => 5),
        array(0 => 67, 1 => 7),
        array(0 => 67, 1 => 6),
        array(0 => 67, 1 => 8),
        array(0 => 67, 1 => 2),
        array(0 => 67, 1 => 3),
        array(0 => 67, 1 => 4),
        array(0 => 65, 1 => 1),
        array(0 => 67, 1 => 2),
        array(0 => 67, 1 => 3),
        array(0 => 67, 1 => 4),
        array(0 => 67, 1 => 5),
        array(0 => 72, 1 => 2),
        array(0 => 72, 1 => 1),
        array(0 => 72, 1 => 0),
        array(0 => 82, 1 => 4),
        array(0 => 82, 1 => 2),
        array(0 => 82, 1 => 2),
        array(0 => 82, 1 => 2),
        array(0 => 82, 1 => 2),
        array(0 => 82, 1 => 2),
        array(0 => 82, 1 => 4),
        array(0 => 78, 1 => 1),
        array(0 => 78, 1 => 3),
        array(0 => 77, 1 => 3),
        array(0 => 77, 1 => 3),
        array(0 => 77, 1 => 3),
        array(0 => 77, 1 => 3),
        array(0 => 75, 1 => 1),
        array(0 => 75, 1 => 1),
        array(0 => 75, 1 => 3),
        array(0 => 75, 1 => 3),
        array(0 => 75, 1 => 3),
        array(0 => 75, 1 => 1),
        array(0 => 75, 1 => 2),
        array(0 => 75, 1 => 3),
        array(0 => 75, 1 => 3),
        array(0 => 75, 1 => 2),
        array(0 => 75, 1 => 3),
        array(0 => 75, 1 => 3),
        array(0 => 83, 1 => 7),
        array(0 => 83, 1 => 7),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 2),
        array(0 => 74, 1 => 2),
        array(0 => 74, 1 => 2),
        array(0 => 74, 1 => 2),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 2),
        array(0 => 74, 1 => 2),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 2),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 3),
        array(0 => 89, 1 => 1),
        array(0 => 89, 1 => 1),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 3),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 3),
        array(0 => 73, 1 => 4),
        array(0 => 73, 1 => 3),
        array(0 => 73, 1 => 4),
        array(0 => 70, 1 => 2),
        array(0 => 70, 1 => 2),
        array(0 => 93, 1 => 2),
        array(0 => 93, 1 => 0),
        array(0 => 94, 1 => 2),
        array(0 => 94, 1 => 2),
        array(0 => 94, 1 => 4),
        array(0 => 94, 1 => 2),
        array(0 => 94, 1 => 2),
        array(0 => 94, 1 => 4),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 5),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 2),
        array(0 => 80, 1 => 1),
        array(0 => 80, 1 => 1),
        array(0 => 80, 1 => 2),
        array(0 => 95, 1 => 1),
        array(0 => 95, 1 => 1),
        array(0 => 95, 1 => 3),
        array(0 => 92, 1 => 2),
        array(0 => 96, 1 => 1),
        array(0 => 96, 1 => 2),
        array(0 => 97, 1 => 3),
        array(0 => 97, 1 => 3),
        array(0 => 97, 1 => 5),
        array(0 => 97, 1 => 6),
        array(0 => 97, 1 => 2),
        array(0 => 88, 1 => 4),
        array(0 => 98, 1 => 4),
        array(0 => 98, 1 => 4),
        array(0 => 99, 1 => 3),
        array(0 => 99, 1 => 1),
        array(0 => 99, 1 => 0),
        array(0 => 76, 1 => 3),
        array(0 => 76, 1 => 2),
        array(0 => 100, 1 => 3),
        array(0 => 100, 1 => 2),
        array(0 => 81, 1 => 2),
        array(0 => 81, 1 => 0),
        array(0 => 101, 1 => 2),
        array(0 => 101, 1 => 2),
        array(0 => 91, 1 => 1),
        array(0 => 91, 1 => 2),
        array(0 => 91, 1 => 1),
        array(0 => 91, 1 => 2),
        array(0 => 91, 1 => 3),
        array(0 => 86, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 85, 1 => 1),
        array(0 => 87, 1 => 1),
        array(0 => 84, 1 => 3),
        array(0 => 102, 1 => 1),
        array(0 => 102, 1 => 3),
        array(0 => 102, 1 => 0),
        array(0 => 103, 1 => 3),
        array(0 => 103, 1 => 3),
        array(0 => 103, 1 => 1),
        array(0 => 90, 1 => 2),
        array(0 => 90, 1 => 3),
        array(0 => 104, 1 => 2),
        array(0 => 104, 1 => 1),
        array(0 => 105, 1 => 3),
        array(0 => 105, 1 => 3),
        array(0 => 105, 1 => 1),
        array(0 => 105, 1 => 3),
        array(0 => 105, 1 => 3),
        array(0 => 105, 1 => 1),
        array(0 => 105, 1 => 1),
    );
    public static $yyReduceMap      = array(
        0   => 0,
        1   => 1,
        2   => 2,
        3   => 3,
        4   => 4,
        5   => 5,
        6   => 6,
        7   => 7,
        21  => 7,
        22  => 7,
        23  => 7,
        36  => 7,
        56  => 7,
        57  => 7,
        65  => 7,
        66  => 7,
        70  => 7,
        79  => 7,
        84  => 7,
        85  => 7,
        90  => 7,
        94  => 7,
        95  => 7,
        99  => 7,
        101 => 7,
        106 => 7,
        168 => 7,
        173 => 7,
        8   => 8,
        9   => 9,
        10  => 10,
        12  => 12,
        13  => 13,
        14  => 14,
        15  => 15,
        16  => 16,
        17  => 17,
        18  => 18,
        19  => 19,
        20  => 20,
        24  => 24,
        25  => 25,
        26  => 26,
        27  => 27,
        28  => 28,
        29  => 29,
        30  => 30,
        31  => 31,
        33  => 31,
        32  => 32,
        34  => 34,
        35  => 35,
        37  => 37,
        38  => 38,
        39  => 39,
        40  => 40,
        41  => 41,
        42  => 42,
        43  => 43,
        44  => 44,
        45  => 45,
        46  => 46,
        47  => 47,
        48  => 48,
        49  => 49,
        50  => 50,
        59  => 50,
        148 => 50,
        152 => 50,
        156 => 50,
        157 => 50,
        51  => 51,
        149 => 51,
        155 => 51,
        52  => 52,
        53  => 53,
        54  => 53,
        55  => 55,
        133 => 55,
        58  => 58,
        60  => 60,
        61  => 61,
        62  => 61,
        63  => 63,
        64  => 64,
        67  => 67,
        68  => 68,
        69  => 68,
        71  => 71,
        98  => 71,
        72  => 72,
        73  => 73,
        74  => 74,
        75  => 75,
        76  => 76,
        77  => 77,
        78  => 78,
        80  => 80,
        82  => 80,
        83  => 80,
        113 => 80,
        81  => 81,
        86  => 86,
        87  => 87,
        88  => 88,
        89  => 89,
        91  => 91,
        92  => 92,
        93  => 92,
        96  => 96,
        97  => 97,
        100 => 100,
        102 => 102,
        103 => 103,
        104 => 104,
        105 => 105,
        107 => 107,
        108 => 108,
        109 => 109,
        110 => 110,
        111 => 111,
        112 => 112,
        114 => 114,
        170 => 114,
        115 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 119,
        120 => 120,
        128 => 120,
        121 => 121,
        122 => 122,
        123 => 123,
        124 => 123,
        126 => 123,
        127 => 123,
        125 => 125,
        129 => 129,
        130 => 130,
        131 => 131,
        174 => 131,
        132 => 132,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        150 => 150,
        151 => 151,
        153 => 153,
        154 => 154,
        158 => 158,
        159 => 159,
        160 => 160,
        161 => 161,
        162 => 162,
        163 => 163,
        164 => 164,
        165 => 165,
        166 => 166,
        167 => 167,
        169 => 169,
        171 => 171,
        172 => 172,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        181 => 178,
        179 => 179,
        182 => 179,
        180 => 180,
        183 => 183,
        184 => 184,
    );
    /**
     * result status
     *
     * @var bool
     */
    public $successful = true;
    /**
     * return value
     *
     * @var mixed
     */
    public $retvalue = 0;
    /**
     * @var
     */
    public $yymajor;
    /**
     * last index of array variable
     *
     * @var mixed
     */
    public $last_index;
    /**
     * last variable name
     *
     * @var string
     */
    public $last_variable;
    /**
     * root parse tree buffer
     *
     * @var Smarty_Internal_ParseTree
     */
    public $root_buffer;
    /**
     * current parse tree object
     *
     * @var Smarty_Internal_ParseTree
     */
    public $current_buffer;
    /**
     * lexer object
     *
     * @var Smarty_Internal_Templatelexer
     */
    public $lex;
    /**
     * {strip} status
     *
     * @var bool
     */
    public $strip = false;
    /**
     * compiler object
     *
     * @var Smarty_Internal_TemplateCompilerBase
     */
    public $compiler = null;
    /**
     * smarty object
     *
     * @var Smarty
     */
    public $smarty = null;
    /**
     * template object
     *
     * @var Smarty_Internal_Template
     */
    public $template = null;
    /**
     * block nesting level
     *
     * @var int
     */
    public $block_nesting_level = 0;
    /**
     * security object
     *
     * @var Smarty_Security
     */
    public $security = null;
    /**
     * template prefix array
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_prefix = array();
    /**
     * template prefix array
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_postfix = array();
    public $yyTraceFILE;
    public $yyTracePrompt;
    public $yyidx;
    public $yyerrcnt;
    public $yystack          = array();
    public $yyTokenName      = array(
        '$', 'VERT', 'COLON', 'UNIMATH',
        'PHP', 'TEXT', 'STRIPON', 'STRIPOFF',
        'LITERALSTART', 'LITERALEND', 'LITERAL', 'SIMPELOUTPUT',
        'SIMPLETAG', 'LDEL', 'RDEL', 'DOLLARID',
        'EQUAL', 'ID', 'PTR', 'LDELMAKENOCACHE',
        'LDELIF', 'LDELFOR', 'SEMICOLON', 'INCDEC',
        'TO', 'STEP', 'LDELFOREACH', 'SPACE',
        'AS', 'APTR', 'LDELSETFILTER', 'CLOSETAG',
        'LDELSLASH', 'ATTR', 'INTEGER', 'COMMA',
        'OPENP', 'CLOSEP', 'MATH', 'ISIN',
        'QMARK', 'NOT', 'TYPECAST', 'HEX',
        'DOT', 'INSTANCEOF', 'SINGLEQUOTESTRING', 'DOUBLECOLON',
        'NAMESPACE', 'AT', 'HATCH', 'OPENB',
        'CLOSEB', 'DOLLAR', 'LOGOP', 'SLOGOP',
        'TLOGOP', 'SINGLECOND', 'QUOTE', 'BACKTICK',
        'error', 'start', 'template', 'literal_e2',
        'literal_e1', 'smartytag', 'tagbody', 'tag',
        'outattr', 'eqoutattr', 'varindexed', 'output',
        'attributes', 'variable', 'value', 'expr',
        'modifierlist', 'statement', 'statements', 'foraction',
        'varvar', 'modparameters', 'attribute', 'ternary',
        'array', 'tlop', 'lop', 'scond',
        'function', 'ns1', 'doublequoted_with_quotes', 'static_class_access',
        'object', 'arrayindex', 'indexdef', 'varvarele',
        'objectchain', 'objectelement', 'method', 'params',
        'modifier', 'modparameter', 'arrayelements', 'arrayelement',
        'doublequoted', 'doublequotedcontent',
    );
    /**
     * internal error flag
     *
     * @var bool
     */
    private $internalError = false;                    /* Index of top element in stack */
    private $_retvalue;                 /* Shifts left before out of the error */
    /**
     * constructor
     *
     * @param Smarty_Internal_Templatelexer        $lex
     * @param Smarty_Internal_TemplateCompilerBase $compiler
     */
    function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)
    {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->template = $this->compiler->template;
        $this->smarty = $this->template->smarty;
        $this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;
        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();
    }  /* The parser's stack */
    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:
                break;   /* If no destructor action specified: do nothing */
        }
    }

    /**
     * insert PHP code in current buffer
     *
     * @param string $code
     */
    public function insertPhpCode($code)
    {
        $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));
    }

    /**
     * error rundown
     *
     */
    public function errorRunDown()
    {
        while ($this->yystack !== array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    /**
     *  merge PHP code with prefix code and return parse tree tag object
     *
     * @param string $code
     *
     * @return Smarty_Internal_ParseTree_Tag
     */
    public function mergePrefixCode($code)
    {
        $tmp = '';
        foreach ($this->compiler->prefix_code as $preCode) {
            $tmp .= $preCode;
        }
        $this->compiler->prefix_code = array();
        $tmp .= $code;
        return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));
    }

    public function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } else if (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        $this->yyTraceFILE = $TraceFILE;
        $this->yyTracePrompt = $zTracePrompt;
    }

    public function PrintTrace()
    {
        $this->yyTraceFILE = fopen('php://output', 'w');
        $this->yyTracePrompt = '<br>';
    }

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[ $tokenType ];
        } else {
            return 'Unknown';
        }
    }

    public function yy_pop_parser_stack()
    {
        if (empty($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE,
                   $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[ $yytos->major ] .
                   "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        static $res3 = array();
        static $res4 = array();
        $state = $this->yystack[ $this->yyidx ]->stateno;
        $expected = self::$yyExpectedTokens[ $state ];
        if (isset($res3[ $state ][ $token ])) {
            if ($res3[ $state ][ $token ]) {
                return $expected;
            }
        } else {
            if ($res3[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return $expected;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ === 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][ 1 ];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[ $this->yyidx ]->stateno,
                        self::$yyRuleInfo[ $yyruleno ][ 0 ]);
                    if (isset(self::$yyExpectedTokens[ $nextstate ])) {
                        $expected = array_merge($expected, self::$yyExpectedTokens[ $nextstate ]);
                        if (isset($res4[ $nextstate ][ $token ])) {
                            if ($res4[ $nextstate ][ $token ]) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        } else {
                            if ($res4[ $nextstate ][ $token ] =
                                in_array($token, self::$yyExpectedTokens[ $nextstate ], true)) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][ 0 ];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } else if ($nextstate === self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } else if ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        static $res = array();
        static $res2 = array();
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[ $this->yyidx ]->stateno;
        if (isset($res[ $state ][ $token ])) {
            if ($res[ $state ][ $token ]) {
                return true;
            }
        } else {
            if ($res[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return true;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ === 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][ 1 ];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[ $this->yyidx ]->stateno,
                        self::$yyRuleInfo[ $yyruleno ][ 0 ]);
                    if (isset($res2[ $nextstate ][ $token ])) {
                        if ($res2[ $nextstate ][ $token ]) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    } else {
                        if ($res2[ $nextstate ][ $token ] = (isset(self::$yyExpectedTokens[ $nextstate ]) &&
                                                             in_array($token,
                                                                      self::$yyExpectedTokens[ $nextstate ],
                                                                      true))) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][ 0 ];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } else if ($nextstate === self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } else if ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

    public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[ $this->yyidx ]->stateno;
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[ $stateno ])) {
            // no shift actions
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_shift_ofst[ $stateno ];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead === self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[ $i ] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                && ($iFallback = self::$yyFallback[ $iLookAhead ]) != 0) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE,
                           $this->yyTracePrompt . 'FALLBACK ' .
                           $this->yyTokenName[ $iLookAhead ] . ' => ' .
                           $this->yyTokenName[ $iFallback ] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */
        if (!isset(self::$yy_reduce_ofst[ $stateno ])) {
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_reduce_ofst[ $stateno ];
        if ($i === self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead === self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[ $i ] != $iLookAhead) {
            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    #line 234 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            #line 221 "../smarty/lexer/smarty_internal_templateparser.y"
            $this->internalError = true;
            $this->compiler->trigger_template_error('Stack overflow in template parser');
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        $this->yystack[] = $yytos;
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE,
                    "%sShift %d\n",
                    $this->yyTracePrompt,
                    $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf($this->yyTraceFILE,
                        " %s",
                        $this->yyTokenName[ $this->yystack[ $i ]->major ]);
            }
            fwrite($this->yyTraceFILE, "\n");
        }
    }

    #line 242 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r0()
    {
        $this->root_buffer->prepend_array($this, $this->template_prefix);
        $this->root_buffer->append_array($this, $this->template_postfix);
        $this->_retvalue = $this->root_buffer->to_smarty_php($this);
    }

    #line 251 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r1()
    {
        $code = $this->compiler->compileTag('private_php',
                                            array(array('code' => $this->yystack[ $this->yyidx + 0 ]->minor),
                                                  array('type' => $this->lex->phpType)),
                                            array());
        if ($this->compiler->has_code && !empty($code)) {
            $tmp = '';
            foreach ($this->compiler->prefix_code as $code) {
                $tmp .= $code;
            }
            $this->compiler->prefix_code = array();
            $this->current_buffer->append_subtree($this,
                                                  new Smarty_Internal_ParseTree_Tag($this,
                                                                                    $this->compiler->processNocacheCode($tmp .
                                                                                                                        $code,
                                                                                                                        true)));
        }
    }

    #line 255 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r2()
    {
        $this->current_buffer->append_subtree($this,
                                              $this->compiler->processText($this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 259 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r3()
    {
        $this->strip = true;
    }

    #line 264 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r4()
    {
        $this->strip = false;
    }

    #line 269 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r5()
    {
        $this->current_buffer->append_subtree($this,
                                              new Smarty_Internal_ParseTree_Text($this->yystack[ $this->yyidx +
                                                                                                 -1 ]->minor));
    }

    #line 272 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r6()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -3 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 276 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r7()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 281 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r8()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 285 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r9()
    {
        $this->_retvalue = '';
    }

    #line 297 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r10()
    {
        if ($this->compiler->has_code) {
            $this->current_buffer->append_subtree($this,
                                                  $this->mergePrefixCode($this->yystack[ $this->yyidx + 0 ]->minor));
        }
        $this->compiler->has_variable_string = false;
        $this->block_nesting_level = count($this->compiler->_tag_stack);
    }

    #line 307 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r12()
    {
        $var = trim(substr($this->yystack[ $this->yyidx + 0 ]->minor,
                           $this->compiler->getLdelLength(),
                           -$this->compiler->getRdelLength()),
                    ' $');
        if (preg_match('/^(.*)(\s+nocache)$/', $var, $match)) {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array('nocache'),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $match[ 1 ] .
                                                                                                             '\'')));
        } else {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array(),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $var .
                                                                                                             '\'')));
        }
    }

    #line 327 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r13()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + 0 ]->minor,
                           $this->compiler->getLdelLength(),
                           -$this->compiler->getRdelLength()));
        if ($tag == 'strip') {
            $this->strip = true;
            $this->_retvalue = null;;
        } else {
            if (defined($tag)) {
                if ($this->security) {
                    $this->security->isTrustedConstant($tag, $this->compiler);
                }
                $this->_retvalue =
                    $this->compiler->compileTag('private_print_expression', array(), array('value' => $tag));
            } else {
                if (preg_match('/^(.*)(\s+nocache)$/', $tag, $match)) {
                    $this->_retvalue = $this->compiler->compileTag($match[ 1 ], array('\'nocache\''));
                } else {
                    $this->_retvalue = $this->compiler->compileTag($tag, array());
                }
            }
        }
    }

    #line 331 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r14()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 335 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r15()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 344 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r16()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                       $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ],
                                                       array('value' => $this->yystack[ $this->yyidx +
                                                                                        0 ]->minor[ 0 ]));
    }

    #line 348 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r17()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          0 ]->minor[ 0 ]),
                                                                         array('var' => '\'' .
                                                                                        substr($this->yystack[ $this->yyidx +
                                                                                                               -1 ]->minor,
                                                                                               1) . '\'')),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ]));
    }

    #line 352 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r18()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          0 ]->minor[ 0 ]),
                                                                         array('var' => $this->yystack[ $this->yyidx +
                                                                                                        -1 ]->minor[ 'var' ])),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ]),
                                                       array('smarty_internal_index' => $this->yystack[ $this->yyidx +
                                                                                                        -1 ]->minor[ 'smarty_internal_index' ]));
    }

    #line 356 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r19()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 371 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r20()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 381 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r24()
    {
        if (defined($this->yystack[ $this->yyidx + -1 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + -1 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('value' => $this->yystack[ $this->yyidx +
                                                                                            -1 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -1 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 394 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r25()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array(),
                                                           array('value' => $this->yystack[ $this->yyidx + 0 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor, array());
        }
    }

    #line 406 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r26()
    {
        if (defined($this->yystack[ $this->yyidx + -2 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + -2 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('value'        => $this->yystack[ $this->yyidx +
                                                                                                   -2 ]->minor,
                                                                 'modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                   -1 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -2 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                   -1 ]->minor));
        }
    }

    #line 411 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r27()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -3 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor));
    }

    #line 416 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r28()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -4 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('modifierlist'  => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor,
                                                             'object_method' => $this->yystack[ $this->yyidx +
                                                                                                -2 ]->minor));
    }

    #line 421 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r29()
    {
        $this->_retvalue = $this->compiler->compileTag('make_nocache',
                                                       array(array('var' => '\'' . substr($this->yystack[ $this->yyidx +
                                                                                                          0 ]->minor,
                                                                                          1) . '\'')));
    }

    #line 426 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r30()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -1 ]->minor, $this->compiler->getLdelLength()));
        $this->_retvalue = $this->compiler->compileTag(($tag === 'else if') ? 'elseif' : $tag,
                                                       array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 431 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r31()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -2 ]->minor, $this->compiler->getLdelLength()));
        $this->_retvalue = $this->compiler->compileTag(($tag === 'else if') ? 'elseif' : $tag,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               -1 ]->minor));
    }

    #line 442 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r32()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -1 ]->minor, $this->compiler->getLdelLength()));
        $this->_retvalue = $this->compiler->compileTag(($tag === 'else if') ? 'elseif' : $tag,
                                                       array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 446 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r34()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -6 ]->minor),
                                                                         array('ifexp' => $this->yystack[ $this->yyidx +
                                                                                                          -4 ]->minor),
                                                                         array('var' => $this->yystack[ $this->yyidx +
                                                                                                        -2 ]->minor),
                                                                         array('step' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))),
                                                       1);
    }

    #line 454 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r35()
    {
        $this->_retvalue = '=' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 458 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r37()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -3 ]->minor),
                                                                         array('to' => $this->yystack[ $this->yyidx +
                                                                                                       -1 ]->minor))),
                                                       0);
    }

    #line 463 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r38()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -5 ]->minor),
                                                                         array('to' => $this->yystack[ $this->yyidx +
                                                                                                       -3 ]->minor),
                                                                         array('step' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))),
                                                       0);
    }

    #line 467 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r39()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                         -3 ]->minor),
                                                                         array('item' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))));
    }

    #line 470 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r40()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                         -5 ]->minor),
                                                                         array('item' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor),
                                                                         array('key' => $this->yystack[ $this->yyidx +
                                                                                                        -3 ]->minor))));
    }

    #line 475 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r41()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 479 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r42()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter',
                                                       array(),
                                                       array('modifier_list' => array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                        -1 ]->minor),
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  0 ]->minor))));
    }

    #line 485 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r43()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter',
                                                       array(),
                                                       array('modifier_list' => array_merge(array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                                    -2 ]->minor),
                                                                                                              $this->yystack[ $this->yyidx +
                                                                                                                              -1 ]->minor)),
                                                                                            $this->yystack[ $this->yyidx +
                                                                                                            0 ]->minor)));
    }

    #line 494 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r44()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + 0 ]->minor,
                           $this->compiler->getLdelLength(),
                           -$this->compiler->getRdelLength()),
                    ' /');
        if ($tag === 'strip') {
            $this->strip = false;
            $this->_retvalue = null;
        } else {
            $this->_retvalue = $this->compiler->compileTag($tag . 'close', array());
        }
    }

    #line 498 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r45()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor . 'close', array());
    }

    #line 503 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r46()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -1 ]->minor . 'close',
                                                       array(),
                                                       array('modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 507 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r47()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -2 ]->minor . 'close',
                                                       array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 515 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r48()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -3 ]->minor . 'close',
                                                       array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor,
                                                             'modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 521 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r49()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
        $this->_retvalue[] = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 526 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r50()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 531 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r51()
    {
        $this->_retvalue = array();
    }

    #line 542 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r52()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + -2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
        } else {
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + -2 ]->minor => '\'' . $this->yystack[ $this->yyidx + 0 ]->minor .
                                                                    '\'');
        }
    }

    #line 550 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r53()
    {
        $this->_retvalue =
            array(trim($this->yystack[ $this->yyidx + -1 ]->minor, " =\n\r\t") => $this->yystack[ $this->yyidx +
                                                                                                  0 ]->minor);
    }

    #line 562 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r55()
    {
        $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
    }

    #line 575 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r58()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 580 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r60()
    {
        $this->yystack[ $this->yyidx + -2 ]->minor[] = $this->yystack[ $this->yyidx + 0 ]->minor;
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor;
    }

    #line 587 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r61()
    {
        $this->_retvalue = array('var'   => '\'' . substr($this->yystack[ $this->yyidx + -2 ]->minor, 1) . '\'',
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 591 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r63()
    {
        $this->_retvalue = array('var'   => $this->yystack[ $this->yyidx + -2 ]->minor,
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 611 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r64()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 616 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r67()
    {
        $this->_retvalue =
            '$_smarty_tpl->getStreamVariable(\'' . substr($this->yystack[ $this->yyidx + -2 ]->minor, 1) . '://' .
            $this->yystack[ $this->yyidx + 0 ]->minor . '\')';
    }

    #line 630 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r68()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -2 ]->minor . trim($this->yystack[ $this->yyidx + -1 ]->minor) .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 636 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r71()
    {
        $this->_retvalue = $this->compiler->compileTag('private_modifier',
                                                       array(),
                                                       array('value'        => $this->yystack[ $this->yyidx +
                                                                                               -1 ]->minor,
                                                             'modifierlist' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 640 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r72()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -1 ]->minor[ 'pre' ] . $this->yystack[ $this->yyidx + -2 ]->minor .
            $this->yystack[ $this->yyidx + -1 ]->minor[ 'op' ] . $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 644 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r73()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 648 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r74()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 652 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r75()
    {
        $this->_retvalue =
            'in_array(' . $this->yystack[ $this->yyidx + -2 ]->minor . ',' . $this->yystack[ $this->yyidx + 0 ]->minor .
            ')';
    }

    #line 660 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r76()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[ $this->yyidx + -2 ]->minor . ',(array)' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 664 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r77()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -5 ]->minor . ' ? ' . $this->compiler->compileVariable('\'' .
                                                                                                                 substr($this->yystack[ $this->yyidx +
                                                                                                                                        -2 ]->minor,
                                                                                                                        1) .
                                                                                                                 '\'') .
                           ' : ' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 674 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r78()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -5 ]->minor . ' ? ' . $this->yystack[ $this->yyidx + -2 ]->minor . ' : ' .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 679 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r80()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 700 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r81()
    {
        $this->_retvalue = '!' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 704 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r86()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 708 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r87()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . '.';
    }

    #line 713 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r88()
    {
        $this->_retvalue = '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 730 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r89()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
        }
    }

    #line 734 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r91()
    {
        $this->_retvalue = '(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 752 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r92()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 763 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r96()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        if ($this->yystack[ $this->yyidx + -2 ]->minor[ 'var' ] === '\'smarty\'') {
            $this->compiler->appendPrefixCode("<?php {$prefixVar} = " .
                                              $this->compiler->compileTag('private_special_variable',
                                                                          array(),
                                                                          $this->yystack[ $this->yyidx +
                                                                                          -2 ]->minor[ 'smarty_internal_index' ]) .
                                              ';?>');
        } else {
            $this->compiler->appendPrefixCode("<?php  {$prefixVar} = " .
                                              $this->compiler->compileVariable($this->yystack[ $this->yyidx +
                                                                                               -2 ]->minor[ 'var' ]) .
                                              $this->yystack[ $this->yyidx + -2 ]->minor[ 'smarty_internal_index' ] .
                                              ';?>');
        }
        $this->_retvalue = $prefixVar . '::' . $this->yystack[ $this->yyidx + 0 ]->minor[ 0 ] .
                           $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ];
    }

    #line 780 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r97()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $tmp = $this->compiler->appendCode('<?php ob_start();?>', $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, "<?php {$prefixVar} = ob_get_clean();?>"));
        $this->_retvalue = $prefixVar;
    }

    #line 799 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r100()
    {
        if (!in_array(strtolower($this->yystack[ $this->yyidx + -2 ]->minor), array('self', 'parent')) &&
            (!$this->security || $this->security->isTrustedStaticClassAccess($this->yystack[ $this->yyidx + -2 ]->minor,
                                                                             $this->yystack[ $this->yyidx + 0 ]->minor,
                                                                             $this->compiler))) {
            if (isset($this->smarty->registered_classes[ $this->yystack[ $this->yyidx + -2 ]->minor ])) {
                $this->_retvalue =
                    $this->smarty->registered_classes[ $this->yystack[ $this->yyidx + -2 ]->minor ] . '::' .
                    $this->yystack[ $this->yyidx + 0 ]->minor[ 0 ] . $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ];
            } else {
                $this->_retvalue =
                    $this->yystack[ $this->yyidx + -2 ]->minor . '::' . $this->yystack[ $this->yyidx + 0 ]->minor[ 0 ] .
                    $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ];
            }
        } else {
            $this->compiler->trigger_template_error('static class \'' . $this->yystack[ $this->yyidx + -2 ]->minor .
                                                    '\' is undefined or not allowed by security setting');
        }
    }

    #line 810 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r102()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 813 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r103()
    {
        $this->_retvalue =
            $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'');
    }

    #line 826 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r104()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor[ 'var' ] === '\'smarty\'') {
            $smarty_var = $this->compiler->compileTag('private_special_variable',
                                                      array(),
                                                      $this->yystack[ $this->yyidx +
                                                                      0 ]->minor[ 'smarty_internal_index' ]);
            $this->_retvalue = $smarty_var;
        } else {
            // used for array reset,next,prev,end,current
            $this->last_variable = $this->yystack[ $this->yyidx + 0 ]->minor[ 'var' ];
            $this->last_index = $this->yystack[ $this->yyidx + 0 ]->minor[ 'smarty_internal_index' ];
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor[ 'var' ]) .
                               $this->yystack[ $this->yyidx + 0 ]->minor[ 'smarty_internal_index' ];
        }
    }

    #line 836 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r105()
    {
        $this->_retvalue = '$_smarty_tpl->tpl_vars[' . $this->yystack[ $this->yyidx + -2 ]->minor . ']->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 840 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r107()
    {
        $this->_retvalue =
            $this->compiler->compileConfigVariable('\'' . $this->yystack[ $this->yyidx + -1 ]->minor . '\'');
    }

    #line 844 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r108()
    {
        $this->_retvalue = '(is_array($tmp = ' .
                           $this->compiler->compileConfigVariable('\'' . $this->yystack[ $this->yyidx + -2 ]->minor .
                                                                  '\'') . ') ? $tmp' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ' :null)';
    }

    #line 848 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r109()
    {
        $this->_retvalue = $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 852 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r110()
    {
        $this->_retvalue =
            '(is_array($tmp = ' . $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + -2 ]->minor) .
            ') ? $tmp' . $this->yystack[ $this->yyidx + 0 ]->minor . ' : null)';
    }

    #line 855 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r111()
    {
        $this->_retvalue = array('var'                   => '\'' .
                                                            substr($this->yystack[ $this->yyidx + -1 ]->minor, 1) .
                                                            '\'',
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 868 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r112()
    {
        $this->_retvalue = array('var'                   => $this->yystack[ $this->yyidx + -1 ]->minor,
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 874 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r114()
    {
        return;
    }

    #line 877 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r115()
    {
        $this->_retvalue =
            '[' . $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'') .
            ']';
    }

    #line 881 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r116()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor) . ']';
    }

    #line 885 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r117()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + -2 ]->minor) . '->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 889 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r118()
    {
        $this->_retvalue = '[\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\']';
    }

    #line 894 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r119()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 899 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r120()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + -1 ]->minor . ']';
    }

    #line 903 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r121()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable',
                                                             array(),
                                                             '[\'section\'][\'' .
                                                             $this->yystack[ $this->yyidx + -1 ]->minor .
                                                             '\'][\'index\']') . ']';
    }

    #line 906 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r122()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable',
                                                             array(),
                                                             '[\'section\'][\'' .
                                                             $this->yystack[ $this->yyidx + -3 ]->minor . '\'][\'' .
                                                             $this->yystack[ $this->yyidx + -1 ]->minor . '\']') . ']';
    }

    #line 912 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r123()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + -1 ]->minor . ']';
    }

    #line 928 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r125()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable('\'' .
                                                                  substr($this->yystack[ $this->yyidx + -1 ]->minor,
                                                                         1) . '\'') . ']';;
    }

    #line 938 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r129()
    {
        $this->_retvalue = '[]';
    }

    #line 942 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r130()
    {
        $this->_retvalue = '\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'';
    }

    #line 947 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r131()
    {
        $this->_retvalue = '\'\'';
    }

    #line 955 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r132()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 961 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r134()
    {
        $var = trim(substr($this->yystack[ $this->yyidx + 0 ]->minor,
                           $this->compiler->getLdelLength(),
                           -$this->compiler->getRdelLength()),
                    ' $');
        $this->_retvalue = $this->compiler->compileVariable('\'' . $var . '\'');
    }

    #line 968 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r135()
    {
        $this->_retvalue = '(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 977 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r136()
    {
        if ($this->yystack[ $this->yyidx + -1 ]->minor[ 'var' ] === '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable',
                                                           array(),
                                                           $this->yystack[ $this->yyidx +
                                                                           -1 ]->minor[ 'smarty_internal_index' ]) .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + -1 ]->minor[ 'var' ]) .
                               $this->yystack[ $this->yyidx + -1 ]->minor[ 'smarty_internal_index' ] .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        }
    }

    #line 982 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r137()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 987 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r138()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 994 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r139()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + -1 ]->minor, 0, 1) === '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue =
            '->' . $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1001 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r140()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + -1 ]->minor) .
                           $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1008 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r141()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue =
            '->{' . $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1016 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r142()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue =
            '->{\'' . $this->yystack[ $this->yyidx + -4 ]->minor . '\'.' . $this->yystack[ $this->yyidx + -2 ]->minor .
            $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1024 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r143()
    {
        $this->_retvalue = '->' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1032 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r144()
    {
        $this->_retvalue = $this->compiler->compilePHPFunctionCall($this->yystack[ $this->yyidx + -3 ]->minor,
                                                                   $this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 1039 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r145()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + -3 ]->minor, 0, 1) === '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = $this->yystack[ $this->yyidx + -3 ]->minor . '(' .
                           implode(',', $this->yystack[ $this->yyidx + -1 ]->minor) . ')';
    }

    #line 1050 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r146()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $this->compiler->appendPrefixCode("<?php {$prefixVar} = " . $this->compiler->compileVariable('\'' .
                                                                                                     substr($this->yystack[ $this->yyidx +
                                                                                                                            -3 ]->minor,
                                                                                                            1) . '\'') .
                                          ';?>');
        $this->_retvalue = $prefixVar . '(' . implode(',', $this->yystack[ $this->yyidx + -1 ]->minor) . ')';
    }

    #line 1067 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r147()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + -2 ]->minor, array($this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1071 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r150()
    {
        $this->_retvalue = array_merge($this->yystack[ $this->yyidx + -2 ]->minor,
                                       array(array_merge($this->yystack[ $this->yyidx + -1 ]->minor,
                                                         $this->yystack[ $this->yyidx + 0 ]->minor)));
    }

    #line 1079 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r151()
    {
        $this->_retvalue =
            array(array_merge($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1087 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r153()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1106 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r154()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1111 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r158()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '', 'method');
    }

    #line 1116 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r159()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'method');
    }

    #line 1121 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r160()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '');
    }

    #line 1126 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r161()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'property');
    }

    #line 1132 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r162()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + -2 ]->minor,
                                 $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor,
                                 'property');
    }

    #line 1136 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r163()
    {
        $this->_retvalue = ' ' . trim($this->yystack[ $this->yyidx + 0 ]->minor) . ' ';
    }

    #line 1155 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r164()
    {
        static $lops = array(
            'eq'  => ' == ',
            'ne'  => ' != ',
            'neq' => ' != ',
            'gt'  => ' > ',
            'ge'  => ' >= ',
            'gte' => ' >= ',
            'lt'  => ' < ',
            'le'  => ' <= ',
            'lte' => ' <= ',
            'mod' => ' % ',
            'and' => ' && ',
            'or'  => ' || ',
            'xor' => ' xor ',
        );
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $lops[ $op ];
    }

    #line 1168 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r165()
    {
        static $tlops = array(
            'isdivby'     => array('op' => ' % ', 'pre' => '!('),
            'isnotdivby'  => array('op' => ' % ', 'pre' => '('),
            'isevenby'    => array('op' => ' / ', 'pre' => '!(1 & '),
            'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),
            'isoddby'     => array('op' => ' / ', 'pre' => '(1 & '),
            'isnotoddby'  => array('op' => ' / ', 'pre' => '!(1 & '),
        );
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $tlops[ $op ];
    }

    #line 1182 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r166()
    {
        static $scond = array(
            'iseven'    => '!(1 & ',
            'isnoteven' => '(1 & ',
            'isodd'     => '(1 & ',
            'isnotodd'  => '!(1 & ',
        );
        $op = strtolower(str_replace(' ', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $scond[ $op ];
    }

    #line 1190 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r167()
    {
        $this->_retvalue = 'array(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 1198 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r169()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . ',' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1202 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r171()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -2 ]->minor . '=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1218 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r172()
    {
        $this->_retvalue =
            '\'' . $this->yystack[ $this->yyidx + -2 ]->minor . '\'=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1224 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r175()
    {
        $this->compiler->leaveDoubleQuote();
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor->to_smarty_php($this);
    }

    #line 1229 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r176()
    {
        $this->yystack[ $this->yyidx + -1 ]->minor->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 1233 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r177()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Dq($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1237 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r178()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)' . $this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 1241 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r179()
    {
        $this->_retvalue =
            new Smarty_Internal_ParseTree_Code('(string)(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')');
    }

    #line 1253 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r180()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\'' .
                                                              substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) .
                                                              '\']->value');
    }

    #line 1257 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r183()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    function yy_r184()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_DqContent($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    public function yy_reduce($yyruleno)
    {
        if ($this->yyTraceFILE && $yyruleno >= 0
            && $yyruleno < count(self::$yyRuleName)) {
            fprintf($this->yyTraceFILE,
                    "%sReduce (%d) [%s].\n",
                    $this->yyTracePrompt,
                    $yyruleno,
                    self::$yyRuleName[ $yyruleno ]);
        }
        $this->_retvalue = $yy_lefthand_side = null;
        if (isset(self::$yyReduceMap[ $yyruleno ])) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[ $yyruleno ]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[ $yyruleno ][ 0 ];
        $yysize = self::$yyRuleInfo[ $yyruleno ][ 1 ];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[ $this->yyidx ] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } else if ($yyact === self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
        #line 214 "../smarty/lexer/smarty_internal_templateparser.y"
        $this->internalError = true;
        $this->yymajor = $yymajor;
        $this->compiler->trigger_template_error();
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        #line 207 "../smarty/lexer/smarty_internal_templateparser.y"
        $this->successful = !$this->internalError;
        $this->internalError = false;
        $this->retvalue = $this->_retvalue;
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            $this->yystack[] = $x;
        }
        $yyendofinput = ($yymajor == 0);
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE,
                    "%sInput %s\n",
                    $this->yyTracePrompt,
                    $this->yyTokenName[ $yymajor ]);
        }
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } else if ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } else if ($yyact === self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE,
                            "%sSyntax Error!\n",
                            $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[ $this->yyidx ]->major;
                    if ($yymx === self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE,
                                    "%sDiscard input token %s\n",
                                    $this->yyTracePrompt,
                                    $this->yyTokenName[ $yymajor ]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                               $yymx !== self::YYERRORSYMBOL &&
                               ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                        ) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor == 0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } else if ($yymx !== self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor !== self::YYNOCODE && $this->yyidx >= 0);
    }
}

