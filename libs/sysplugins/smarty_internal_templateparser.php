<?php

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


// line 11 "../smarty/lexer/smarty_internal_templateparser.y"

/**
* Smarty Template Parser Class
*
* This is the template parser.
* It is generated from the smarty_internal_templateparser.y file
* 
* @author Uwe Tews <uwe.tews@googlemail.com>
*/
class Smarty_Internal_Templateparser
{
// line 23 "../smarty/lexer/smarty_internal_templateparser.y"

    const ERR1 = 'Security error: Call to private object member not allowed';
    const ERR2 = 'Security error: Call to dynamic object member not allowed';

    /**
     * result status
     *
     * @var bool
     */
    public $successful = true;

    /**
     * return value
     *
     * @var mixed
     */
    public $retvalue = 0;

    /**
     * @var
     */
    public $yymajor;

    /**
     * last index of array variable
     *
     * @var mixed
     */
    public $last_index;

    /**
     * last variable name
     *
     * @var string
     */
    public $last_variable;

    /**
     * root parse tree buffer
     *
     * @var Smarty_Internal_ParseTree_Template
     */
    public $root_buffer;

    /**
     * current parse tree object
     *
     * @var Smarty_Internal_ParseTree
     */
    public $current_buffer;

    /**
     * lexer object
     *
     * @var Smarty_Internal_Templatelexer
     */
    public $lex;

    /**
     * internal error flag
     *
     * @var bool
     */
    private $internalError = false;

    /**
     * {strip} status
     *
     * @var bool
     */
    public $strip = false;
    /**
     * compiler object
     *
     * @var Smarty_Internal_TemplateCompilerBase
     */
    public $compiler = null;

    /**
     * smarty object
     *
     * @var Smarty
     */
    public $smarty = null;

    /**
     * template object
     *
     * @var Smarty_Internal_Template
     */
    public $template = null;

    /**
     * block nesting level
     *
     * @var int
     */
    public $block_nesting_level = 0;

    /**
     * security object
     *
     * @var Smarty_Security
     */
    public $security = null;

    /**
     * template prefix array
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_prefix = array();

    /**
     * template prefix array
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_postfix = array();

    /**
     * constructor
     *
     * @param Smarty_Internal_Templatelexer        $lex
     * @param Smarty_Internal_TemplateCompilerBase $compiler
     */
    public function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)
    {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->template = $this->compiler->template;
        $this->smarty = $this->template->smarty;
        $this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;
        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();
    }

     /**
     * insert PHP code in current buffer
     *
     * @param string $code
     */
    public function insertPhpCode($code)
    {
        $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));
    }

    /**
     * error rundown
     *
     */
    public function errorRunDown()
    {
        while ($this->yystack !== array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    /**
     *  merge PHP code with prefix code and return parse tree tag object
     *
     * @param string $code
     *
     * @return Smarty_Internal_ParseTree_Tag
     */
    public function mergePrefixCode($code)
    {
        $tmp = '';
        foreach ($this->compiler->prefix_code as $preCode) {
            $tmp .= $preCode;
        }
        $this->compiler->prefix_code = array();
        $tmp .= $code;
        return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));
    }


    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_TEXT                           =  3;
    const TP_STRIPON                        =  4;
    const TP_STRIPOFF                       =  5;
    const TP_LITERALSTART                   =  6;
    const TP_LITERALEND                     =  7;
    const TP_LITERAL                        =  8;
    const TP_SIMPELOUTPUT                   =  9;
    const TP_SIMPLETAG                      = 10;
    const TP_SMARTYBLOCKCHILDPARENT         = 11;
    const TP_LDEL                           = 12;
    const TP_RDEL                           = 13;
    const TP_DOLLARID                       = 14;
    const TP_EQUAL                          = 15;
    const TP_ID                             = 16;
    const TP_PTR                            = 17;
    const TP_LDELMAKENOCACHE                = 18;
    const TP_LDELIF                         = 19;
    const TP_LDELFOR                        = 20;
    const TP_SEMICOLON                      = 21;
    const TP_INCDEC                         = 22;
    const TP_TO                             = 23;
    const TP_STEP                           = 24;
    const TP_LDELFOREACH                    = 25;
    const TP_SPACE                          = 26;
    const TP_AS                             = 27;
    const TP_APTR                           = 28;
    const TP_LDELSETFILTER                  = 29;
    const TP_CLOSETAG                       = 30;
    const TP_LDELSLASH                      = 31;
    const TP_ATTR                           = 32;
    const TP_INTEGER                        = 33;
    const TP_COMMA                          = 34;
    const TP_OPENP                          = 35;
    const TP_CLOSEP                         = 36;
    const TP_MATH                           = 37;
    const TP_UNIMATH                        = 38;
    const TP_ISIN                           = 39;
    const TP_QMARK                          = 40;
    const TP_NOT                            = 41;
    const TP_TYPECAST                       = 42;
    const TP_HEX                            = 43;
    const TP_DOT                            = 44;
    const TP_INSTANCEOF                     = 45;
    const TP_SINGLEQUOTESTRING              = 46;
    const TP_DOUBLECOLON                    = 47;
    const TP_NAMESPACE                      = 48;
    const TP_AT                             = 49;
    const TP_HATCH                          = 50;
    const TP_OPENB                          = 51;
    const TP_CLOSEB                         = 52;
    const TP_DOLLAR                         = 53;
    const TP_LOGOP                          = 54;
    const TP_SLOGOP                         = 55;
    const TP_TLOGOP                         = 56;
    const TP_SINGLECOND                     = 57;
    const TP_ARRAYOPEN                      = 58;
    const TP_QUOTE                          = 59;
    const TP_BACKTICK                       = 60;
    const YY_NO_ACTION = 514;
    const YY_ACCEPT_ACTION = 513;
    const YY_ERROR_ACTION = 512;

    const YY_SZ_ACTTAB = 2016;
public static $yy_action = array(
    238,  239,  240,    1,   99,  127,  301,  185,  206,  207,
      6,   53,   44,   21,  274,  192,  105,  387,  513,   92,
    208,  253,  209,  308,  200,  387,   22,  387,  192,   41,
    387,  211,   42,   43,  267,  216,  387,  226,  387,  195,
    387,   52,    4,  314,  289,  141,   55,  303,  215,    5,
     50,  238,  239,  240,    1,  248,   93,  381,   51,  227,
    207,    6,   53,  261,  244,  171,  292,  105,  147,  249,
    381,  208,  253,  209,   95,  214,  381,   22,  248,  426,
     41,  170,  292,   42,   43,  267,  216,   95,  271,  144,
    195,  426,   52,    4,  131,  289,  222,  175,  426,  135,
      5,   50,  238,  239,  240,    1,  131,  129,  259,  194,
    426,  207,    6,   53,  132,  192,   37,    3,  105,   95,
     90,   12,  208,  253,  209,  237,  214,  206,   22,  192,
     52,   41,  255,  289,   42,   43,  267,  216,  289,  271,
    260,  195,   52,   52,    4,  289,  289,  121,  482,  108,
    258,    5,   50,  238,  239,  240,    1,   94,  129,  293,
    186,   13,  207,    6,   53,  210,  257,   14,  256,  105,
    287,  291,  347,  208,  253,  209,  273,  214,  347,   22,
    279,  145,   41,  249,  122,   42,   43,  267,  216,  427,
    271,   49,  195,  256,   52,    4,  163,  289,   33,  170,
    292,  427,    5,   50,  238,  239,  240,    1,   19,  128,
    184,  194,  263,  207,    6,   53,   49,  204,  189,  168,
    105,  176,  252,  426,  208,  253,  209,  439,  214,  264,
     11,  299,  224,   41,  439,  426,   42,   43,  267,  216,
    311,  271,  192,  195,  176,   52,    4,  134,  289,  289,
    347,  136,  144,    5,   50,  238,  239,  240,    1,  256,
    129,  248,  181,  347,  207,    6,   53,   13,   17,  347,
     34,  105,   95,   14,   14,  208,  253,  209,  301,  203,
    206,   22,   49,  149,   41,  138,  289,   42,   43,  267,
    216,   16,  271,  248,  195,  100,   52,    4,  323,  289,
    121,  133,  108,  223,    5,   50,  238,  239,  240,    1,
     94,  130,  175,  194,  228,  207,    6,   53,   27,  297,
     32,  324,  105,  287,  100,  426,  208,  253,  209,   30,
    214,  220,   22,  151,  150,   41,  249,  426,   42,   43,
    267,  216,  159,  271,  139,  195,  249,   52,    4,  215,
    289,  143,  248,   10,  248,    5,   50,  238,  239,  240,
      1,  248,  129,  165,  179,  109,  207,    6,   53,  251,
    289,  246,   18,  105,  256,  249,  250,  208,  253,  209,
     15,  214,   95,   22,  104,  169,   41,  217,  176,   42,
     43,  267,  216,   89,  271,  228,  195,   49,   52,    4,
    166,  289,  230,  191,  309,  100,    5,   50,  238,  239,
    240,    1,  108,  129,  278,  194,  162,  207,    6,   53,
    455,  192,  122,  455,  105,  176,  248,  455,  208,  253,
    209,  132,  180,  321,   22,  172,  292,   41,   12,  439,
     42,   43,  267,  216,   83,  271,  439,  195,   26,   52,
      4,   84,  289,   29,  173,  256,  236,    5,   50,  238,
    239,  240,    1,   25,  131,  290,  194,  228,  207,    6,
     53,    9,  289,  304,  229,  105,    7,  100,   49,  208,
    253,  209,  261,  214,  152,   20,  156,    9,   45,  235,
    236,   42,   43,  267,  216,   25,  271,  315,  195,  215,
     52,    4,   25,  289,  316,  307,  175,  310,    5,   50,
    238,  239,  240,    1,   37,  131,  158,  194,  252,  207,
      6,   53,    8,   85,  288,  190,  105,   91,  164,  167,
    208,  253,  209,  153,  214,  154,   20,  234,  241,   41,
    247,  242,   42,   43,  267,  216,  215,  271,  174,  195,
    106,   52,    4,  254,  289,   39,   40,   38,  113,    5,
     50,  276,  205,  206,  243,  262,   86,  102,  266,  183,
     96,   82,  282,  283,  284,  285,   94,  268,  298,  265,
    269,  318,  286,    7,  270,  196,  272,  312,  277,  287,
     23,   54,  225,  276,  205,  206,  243,  313,   86,  102,
    322,  182,   96,   62,  155,   39,   40,   38,   94,  157,
     34,  265,   35,  325,  296,  296,  270,  196,  272,  296,
    277,  287,  282,  283,  284,  285,  276,  296,  206,  245,
    296,  107,  102,  296,  183,   96,   82,  276,  296,  206,
    296,   94,  107,  296,  265,  193,  111,   74,  296,  270,
    196,  272,   94,  277,  287,  265,  296,  296,  296,  296,
    270,  196,  272,  251,  277,  287,   18,  296,  296,  276,
    250,  206,  296,  296,  107,  199,  306,  193,  111,   74,
     13,  146,  142,  296,   94,   87,   14,  265,  296,  296,
    160,  248,  270,  196,  272,  296,  277,  287,  296,  213,
    248,  296,   44,   21,  274,  296,  455,  198,  306,  455,
    176,  302,    3,  455,  439,  296,  296,  238,  239,  240,
      2,  296,  300,  296,  296,  296,  207,    6,   53,  296,
    192,  296,  296,  105,  296,  296,  296,  208,  253,  209,
    296,  439,  348,  302,  439,  296,  455,  296,  439,  238,
    239,  240,    2,  296,  300,  348,  296,  296,  207,    6,
     53,  348,  192,  296,  296,  105,  296,  295,   28,  208,
    253,  209,  296,  296,  383,  231,  232,  233,  125,  296,
    296,  238,  239,  240,    1,  296,  192,  383,  296,  296,
    207,    6,   53,  383,  296,  296,  296,  105,  380,  296,
     28,  208,  253,  209,  276,  296,  206,  296,  296,  101,
    296,  380,  193,  114,   47,  296,  112,  380,  296,   94,
    296,  296,  265,  251,  296,  296,   18,  270,  196,  272,
    250,  277,  287,  296,  276,  296,  206,  296,  296,  107,
     13,  296,  193,  114,   69,  296,   14,  296,  296,   94,
    148,  296,  265,  296,   88,  296,  296,  270,  196,  272,
    248,  277,  287,  296,  296,  296,  276,  296,  206,  202,
    296,  107,  296,  296,  193,  114,   69,  296,  296,  176,
    296,   94,  296,  296,  265,  296,  296,  296,  296,  270,
    196,  272,  296,  277,  287,  276,   13,  206,  296,  296,
    107,  197,   14,  193,  111,   74,  296,   39,   40,   38,
     94,  296,  296,  265,  251,  296,  296,   18,  270,  196,
    272,  250,  277,  287,  282,  283,  284,  285,  276,  296,
    206,  296,  296,  107,  305,  296,  193,  114,   69,  296,
    296,  296,  296,   94,  296,  296,  265,  296,  296,  296,
    296,  270,  196,  272,  219,  277,  287,  276,  296,  206,
    296,  296,  101,  201,  296,  193,  114,   61,  276,  229,
    206,  296,   94,  107,  296,  265,  188,  110,   60,  296,
    270,  196,  272,   94,  277,  287,  265,  251,  296,  296,
     18,  270,  196,  272,  250,  277,  287,  276,  296,  206,
    296,  296,  107,  296,  296,  193,   97,   81,  296,  296,
    296,  296,   94,  296,  296,  265,  455,  296,  296,  455,
    270,  196,  272,  455,  277,  287,  276,  212,  206,  296,
    296,  107,  296,  296,  193,   98,   80,  276,  296,  206,
    296,   94,  107,  296,  265,  193,  114,   56,  296,  270,
    196,  272,   94,  277,  287,  265,  455,  296,  296,  296,
    270,  196,  272,  296,  277,  287,  276,  296,  206,  296,
    296,  107,  296,  296,  193,  114,   68,  296,  296,  296,
    296,   94,  296,  296,  265,  296,  296,  296,  296,  270,
    196,  272,  296,  277,  287,  276,  296,  206,  296,  296,
    107,  296,  296,  193,   97,   57,  276,  296,  206,  296,
     94,  107,  296,  265,  193,  114,   67,  296,  270,  196,
    272,   94,  277,  287,  265,  296,  296,  296,  296,  270,
    196,  272,  296,  277,  287,  276,  296,  206,  296,  296,
    107,  296,  296,  193,  114,   58,  296,  296,  296,  296,
     94,  296,  296,  265,  296,  296,  296,  296,  270,  196,
    272,  296,  277,  287,  276,  296,  206,  296,  296,  107,
    296,  296,  193,  114,   59,  276,  296,  206,  296,   94,
    107,  296,  265,  193,  114,   70,  296,  270,  196,  272,
     94,  277,  287,  265,  296,  296,  296,  296,  270,  196,
    272,  296,  277,  287,  276,  296,  206,  296,  296,  107,
    296,  296,  193,  114,   61,  296,  296,  296,  296,   94,
    296,  296,  265,  296,  296,  296,  296,  270,  196,  272,
    296,  277,  287,  276,  296,  206,  296,  296,  107,  296,
    296,  193,  114,   66,  276,  296,  206,  296,   94,  107,
    296,  265,  193,  114,   71,  296,  270,  196,  272,   94,
    277,  287,  265,  296,  296,  296,  296,  270,  196,  272,
    296,  277,  287,  276,  296,  206,  296,  296,  107,  296,
    296,  193,  114,   72,  296,  296,  296,  296,   94,  296,
    296,  265,  296,  296,  296,  296,  270,  196,  272,  296,
    277,  287,  276,  296,  206,  296,  296,  107,  296,  296,
    193,  114,   73,  276,  296,  206,  296,   94,  107,  296,
    265,  193,  114,   75,  296,  270,  196,  272,   94,  277,
    287,  265,  296,  296,  296,  296,  270,  196,  272,  296,
    277,  287,  276,  296,  206,  296,  296,  107,  296,  296,
    187,  114,   63,  296,  296,  296,  296,   94,  296,  296,
    265,  296,  296,  296,  296,  270,  196,  272,  296,  277,
    287,  276,  296,  206,  296,  296,  107,  296,  296,  193,
    114,   64,  276,  296,  206,  296,   94,  107,  296,  265,
    193,  114,   65,  296,  270,  196,  272,   94,  277,  287,
    265,  296,  296,  296,  296,  270,  196,  272,  296,  277,
    287,  276,  296,  206,  296,  296,  107,  296,  296,  193,
    114,   76,  296,  296,  296,  296,   94,  296,  296,  265,
    296,  296,  296,  296,  270,  196,  272,  296,  277,  287,
    276,  296,  206,  296,  296,  107,  296,  296,  193,  114,
     77,  276,  296,  206,  296,   94,  107,  296,  265,  193,
    114,   78,  296,  270,  196,  272,   94,  277,  287,  265,
    296,  296,  296,  296,  270,  196,  272,  296,  277,  287,
    276,  296,  206,  296,  296,  107,  296,  296,  193,  114,
     79,  296,  296,  296,  296,   94,  296,  296,  265,  296,
    296,  296,  296,  270,  196,  272,  296,  277,  287,  276,
    296,  206,  296,  296,  107,  296,  296,  193,  114,   46,
    276,  296,  206,  296,   94,  107,  296,  265,  193,  114,
     48,  296,  270,  196,  272,   94,  277,  287,  265,  296,
    296,  296,  296,  270,  196,  272,  296,  277,  287,  276,
    192,  206,  296,  296,  107,  296,  296,  193,  126,  296,
    296,  296,  351,  296,   94,  296,  221,  296,  296,  296,
    296,  319,  270,  196,  272,   13,  277,  287,  276,  296,
    206,   14,  296,  107,  426,  296,  193,  120,  296,  276,
    296,  206,  296,   94,  107,  296,  426,  193,  124,  296,
    275,  270,  196,  272,   94,  277,  287,  296,  296,  296,
    296,  296,  270,  196,  272,  296,  277,  287,  276,  296,
    206,  296,  296,  107,  137,  296,  193,  115,  296,  296,
    296,  296,  296,   94,  248,  296,   44,   21,  274,  296,
    296,  270,  196,  272,  296,  277,  287,  276,  296,  206,
    296,  296,  107,  296,  296,  193,  116,  296,  276,  296,
    206,  296,   94,  107,  296,  296,  193,  117,  296,  296,
    270,  196,  272,   94,  277,  287,  296,  296,  296,  296,
    296,  270,  196,  272,  296,  277,  287,  276,  296,  206,
    296,  161,  107,  296,  296,  193,  118,  296,  296,  296,
    296,  248,   94,   44,   21,  274,  296,  296,  296,  296,
    270,  196,  272,  296,  277,  287,  276,  296,  206,  296,
    296,  107,  296,  296,  193,  119,  296,  276,  296,  206,
    296,   94,  107,  296,  296,  193,  123,  296,  296,  270,
    196,  272,   94,  277,  287,  296,  296,  296,  296,  296,
    270,  196,  272,  213,  277,  287,   36,  296,   13,  296,
    455,  296,  296,  455,   14,  296,  213,  455,  439,   39,
     40,   38,  296,  455,  296,  296,  455,  296,  296,   33,
    455,  439,  296,  393,  296,  296,  282,  283,  284,  285,
    296,  296,  296,  296,  140,  439,  296,  296,  439,  296,
    455,  296,  439,  280,   39,   40,   38,  296,  439,  103,
    296,  439,  296,  455,  296,  439,  426,  296,  393,  393,
    393,  282,  283,  284,  285,   39,   40,   38,  426,  296,
    296,  296,  296,  296,  296,  393,  393,  393,  393,  213,
    296,  296,  282,  283,  284,  285,  455,  296,  296,  455,
    296,  296,   24,  455,  439,  317,   39,   40,   38,  455,
    296,  296,  455,  296,  296,  296,  455,  439,  296,  296,
    296,  296,  296,  282,  283,  284,  285,  296,  296,  296,
    296,  439,  296,  296,  439,  296,  455,  296,  439,  296,
     39,   40,   38,  296,  439,  294,  296,  439,   31,  455,
    177,  439,  296,  296,  296,  281,  296,  282,  283,  284,
    285,  218,   39,   40,   38,  296,  296,  296,  296,   39,
     40,   38,  178,  296,   39,   40,   38,  296,  296,  282,
    283,  284,  285,   39,   40,   38,  282,  283,  284,  285,
    296,  282,  283,  284,  285,  320,   39,   40,   38,  296,
    282,  283,  284,  285,  296,  296,  296,  296,  296,  296,
    296,  296,  296,  282,  283,  284,  285,  296,  296,   39,
     40,   38,  296,  455,  296,  296,  455,   39,   40,   38,
    455,  439,  296,  296,  296,  296,  282,  283,  284,  285,
    296,  296,  296,  296,  282,  283,  284,  285,  296,  296,
    296,  296,  296,  296,  296,  296,  296,  296,  439,  296,
    296,  439,  296,  455,  296,  439,
    );
    public static $yy_lookahead = array(
      9,   10,   11,   12,   81,   14,   66,   16,   68,   18,
     19,   20,   85,   86,   87,    1,   25,   13,   62,   63,
     29,   30,   31,  100,   33,   21,   35,   23,    1,   38,
     26,   17,   41,   42,   43,   44,   32,   46,   34,   48,
     36,   50,   51,   52,   53,   73,  106,  107,   44,   58,
     59,    9,   10,   11,   12,   83,   14,   13,   16,   15,
     18,   19,   20,   96,   70,   98,   99,   25,   73,   97,
     26,   29,   30,   31,   17,   33,   32,   35,   83,   35,
     38,   98,   99,   41,   42,   43,   44,   17,   46,   95,
     48,   47,   50,   51,   14,   53,   16,  102,   35,   14,
     58,   59,    9,   10,   11,   12,   14,   14,   16,   16,
     47,   18,   19,   20,   44,    1,    2,   15,   25,   17,
     35,   51,   29,   30,   31,   66,   33,   68,   35,    1,
     50,   38,   16,   53,   41,   42,   43,   44,   53,   46,
     48,   48,   50,   50,   51,   53,   53,   71,    1,   47,
     74,   58,   59,    9,   10,   11,   12,   81,   14,   13,
     16,   26,   18,   19,   20,   49,   90,   32,   22,   25,
     94,   70,   26,   29,   30,   31,   92,   33,   32,   35,
     52,   95,   38,   97,  100,   41,   42,   43,   44,   35,
     46,   45,   48,   22,   50,   51,   77,   53,   15,   98,
     99,   47,   58,   59,    9,   10,   11,   12,   12,   14,
     14,   16,   16,   18,   19,   20,   45,   64,   65,   77,
     25,  102,  103,   35,   29,   30,   31,   44,   33,   33,
     35,   60,   44,   38,   51,   47,   41,   42,   43,   44,
     52,   46,    1,   48,  102,   50,   51,   14,   53,   53,
     13,   73,   95,   58,   59,    9,   10,   11,   12,   22,
     14,   83,   16,   26,   18,   19,   20,   26,   26,   32,
     15,   25,   17,   32,   32,   29,   30,   31,   66,   33,
     68,   35,   45,   73,   38,   71,   53,   41,   42,   43,
     44,   15,   46,   83,   48,   81,   50,   51,   22,   53,
     71,   81,   47,   74,   58,   59,    9,   10,   11,   12,
     81,   14,  102,   16,   71,   18,   19,   20,   28,  107,
     15,   78,   25,   94,   81,   35,   29,   30,   31,   12,
     33,   14,   35,   16,   95,   38,   97,   47,   41,   42,
     43,   44,   73,   46,   73,   48,   97,   50,   51,   44,
     53,   73,   83,   35,   83,   58,   59,    9,   10,   11,
     12,   83,   14,   77,   16,   47,   18,   19,   20,    9,
     53,   83,   12,   25,   22,   97,   16,   29,   30,   31,
     21,   33,   17,   35,   80,   14,   38,   16,  102,   41,
     42,   43,   44,   34,   46,   71,   48,   45,   50,   51,
     77,   53,   78,   79,   52,   81,   58,   59,    9,   10,
     11,   12,   47,   14,   92,   16,   73,   18,   19,   20,
      9,    1,  100,   12,   25,  102,   83,   16,   29,   30,
     31,   44,   33,   14,   35,   98,   99,   38,   51,   44,
     41,   42,   43,   44,   81,   46,   51,   48,   28,   50,
     51,   81,   53,   12,    6,   22,    8,   58,   59,    9,
     10,   11,   12,   34,   14,   36,   16,   71,   18,   19,
     20,   34,   53,   36,   78,   25,   35,   81,   45,   29,
     30,   31,   96,   33,   95,   35,   95,   34,   38,    7,
      8,   41,   42,   43,   44,   34,   46,   36,   48,   44,
     50,   51,   34,   53,   36,   52,  102,   52,   58,   59,
      9,   10,   11,   12,    2,   14,   95,   16,  103,   18,
     19,   20,   35,   95,   99,   65,   25,   82,   82,   82,
     29,   30,   31,   95,   33,   95,   35,    7,   13,   38,
     14,   13,   41,   42,   43,   44,   44,   46,   16,   48,
     16,   50,   51,   16,   53,   37,   38,   39,   16,   58,
     59,   66,   67,   68,   69,   16,   71,   72,   16,   74,
     75,   76,   54,   55,   56,   57,   81,   33,   60,   84,
     33,   13,   16,   35,   89,   90,   91,   52,   93,   94,
     40,   16,   16,   66,   67,   68,   69,   52,   71,   72,
     16,   74,   75,   76,   50,   37,   38,   39,   81,   50,
     15,   84,   23,   36,  108,  108,   89,   90,   91,  108,
     93,   94,   54,   55,   56,   57,   66,  108,   68,   69,
    108,   71,   72,  108,   74,   75,   76,   66,  108,   68,
    108,   81,   71,  108,   84,   74,   75,   76,  108,   89,
     90,   91,   81,   93,   94,   84,  108,  108,  108,  108,
     89,   90,   91,    9,   93,   94,   12,  108,  108,   66,
     16,   68,  108,  108,   71,  104,  105,   74,   75,   76,
     26,   73,   28,  108,   81,   77,   32,   84,  108,  108,
     73,   83,   89,   90,   91,  108,   93,   94,  108,    2,
     83,  108,   85,   86,   87,  108,    9,  104,  105,   12,
    102,    3,   15,   16,   17,  108,  108,    9,   10,   11,
     12,  108,   14,  108,  108,  108,   18,   19,   20,  108,
      1,  108,  108,   25,  108,  108,  108,   29,   30,   31,
    108,   44,   13,    3,   47,  108,   49,  108,   51,    9,
     10,   11,   12,  108,   14,   26,  108,  108,   18,   19,
     20,   32,    1,  108,  108,   25,  108,   59,   60,   29,
     30,   31,  108,  108,   13,    3,    4,    5,    6,  108,
    108,    9,   10,   11,   12,  108,    1,   26,  108,  108,
     18,   19,   20,   32,  108,  108,  108,   25,   13,   59,
     60,   29,   30,   31,   66,  108,   68,  108,  108,   71,
    108,   26,   74,   75,   76,  108,   78,   32,  108,   81,
    108,  108,   84,    9,  108,  108,   12,   89,   90,   91,
     16,   93,   94,  108,   66,  108,   68,  108,  108,   71,
     26,  108,   74,   75,   76,  108,   32,  108,  108,   81,
     73,  108,   84,  108,   77,  108,  108,   89,   90,   91,
     83,   93,   94,  108,  108,  108,   66,  108,   68,  101,
    108,   71,  108,  108,   74,   75,   76,  108,  108,  102,
    108,   81,  108,  108,   84,  108,  108,  108,  108,   89,
     90,   91,  108,   93,   94,   66,   26,   68,  108,  108,
     71,  101,   32,   74,   75,   76,  108,   37,   38,   39,
     81,  108,  108,   84,    9,  108,  108,   12,   89,   90,
     91,   16,   93,   94,   54,   55,   56,   57,   66,  108,
     68,  108,  108,   71,  105,  108,   74,   75,   76,  108,
    108,  108,  108,   81,  108,  108,   84,  108,  108,  108,
    108,   89,   90,   91,   49,   93,   94,   66,  108,   68,
    108,  108,   71,  101,  108,   74,   75,   76,   66,   78,
     68,  108,   81,   71,  108,   84,   74,   75,   76,  108,
     89,   90,   91,   81,   93,   94,   84,    9,  108,  108,
     12,   89,   90,   91,   16,   93,   94,   66,  108,   68,
    108,  108,   71,  108,  108,   74,   75,   76,  108,  108,
    108,  108,   81,  108,  108,   84,    9,  108,  108,   12,
     89,   90,   91,   16,   93,   94,   66,   49,   68,  108,
    108,   71,  108,  108,   74,   75,   76,   66,  108,   68,
    108,   81,   71,  108,   84,   74,   75,   76,  108,   89,
     90,   91,   81,   93,   94,   84,   49,  108,  108,  108,
     89,   90,   91,  108,   93,   94,   66,  108,   68,  108,
    108,   71,  108,  108,   74,   75,   76,  108,  108,  108,
    108,   81,  108,  108,   84,  108,  108,  108,  108,   89,
     90,   91,  108,   93,   94,   66,  108,   68,  108,  108,
     71,  108,  108,   74,   75,   76,   66,  108,   68,  108,
     81,   71,  108,   84,   74,   75,   76,  108,   89,   90,
     91,   81,   93,   94,   84,  108,  108,  108,  108,   89,
     90,   91,  108,   93,   94,   66,  108,   68,  108,  108,
     71,  108,  108,   74,   75,   76,  108,  108,  108,  108,
     81,  108,  108,   84,  108,  108,  108,  108,   89,   90,
     91,  108,   93,   94,   66,  108,   68,  108,  108,   71,
    108,  108,   74,   75,   76,   66,  108,   68,  108,   81,
     71,  108,   84,   74,   75,   76,  108,   89,   90,   91,
     81,   93,   94,   84,  108,  108,  108,  108,   89,   90,
     91,  108,   93,   94,   66,  108,   68,  108,  108,   71,
    108,  108,   74,   75,   76,  108,  108,  108,  108,   81,
    108,  108,   84,  108,  108,  108,  108,   89,   90,   91,
    108,   93,   94,   66,  108,   68,  108,  108,   71,  108,
    108,   74,   75,   76,   66,  108,   68,  108,   81,   71,
    108,   84,   74,   75,   76,  108,   89,   90,   91,   81,
     93,   94,   84,  108,  108,  108,  108,   89,   90,   91,
    108,   93,   94,   66,  108,   68,  108,  108,   71,  108,
    108,   74,   75,   76,  108,  108,  108,  108,   81,  108,
    108,   84,  108,  108,  108,  108,   89,   90,   91,  108,
     93,   94,   66,  108,   68,  108,  108,   71,  108,  108,
     74,   75,   76,   66,  108,   68,  108,   81,   71,  108,
     84,   74,   75,   76,  108,   89,   90,   91,   81,   93,
     94,   84,  108,  108,  108,  108,   89,   90,   91,  108,
     93,   94,   66,  108,   68,  108,  108,   71,  108,  108,
     74,   75,   76,  108,  108,  108,  108,   81,  108,  108,
     84,  108,  108,  108,  108,   89,   90,   91,  108,   93,
     94,   66,  108,   68,  108,  108,   71,  108,  108,   74,
     75,   76,   66,  108,   68,  108,   81,   71,  108,   84,
     74,   75,   76,  108,   89,   90,   91,   81,   93,   94,
     84,  108,  108,  108,  108,   89,   90,   91,  108,   93,
     94,   66,  108,   68,  108,  108,   71,  108,  108,   74,
     75,   76,  108,  108,  108,  108,   81,  108,  108,   84,
    108,  108,  108,  108,   89,   90,   91,  108,   93,   94,
     66,  108,   68,  108,  108,   71,  108,  108,   74,   75,
     76,   66,  108,   68,  108,   81,   71,  108,   84,   74,
     75,   76,  108,   89,   90,   91,   81,   93,   94,   84,
    108,  108,  108,  108,   89,   90,   91,  108,   93,   94,
     66,  108,   68,  108,  108,   71,  108,  108,   74,   75,
     76,  108,  108,  108,  108,   81,  108,  108,   84,  108,
    108,  108,  108,   89,   90,   91,  108,   93,   94,   66,
    108,   68,  108,  108,   71,  108,  108,   74,   75,   76,
     66,  108,   68,  108,   81,   71,  108,   84,   74,   75,
     76,  108,   89,   90,   91,   81,   93,   94,   84,  108,
    108,  108,  108,   89,   90,   91,  108,   93,   94,   66,
      1,   68,  108,  108,   71,  108,  108,   74,   75,  108,
    108,  108,   13,  108,   81,  108,   17,  108,  108,  108,
    108,   88,   89,   90,   91,   26,   93,   94,   66,  108,
     68,   32,  108,   71,   35,  108,   74,   75,  108,   66,
    108,   68,  108,   81,   71,  108,   47,   74,   75,  108,
     88,   89,   90,   91,   81,   93,   94,  108,  108,  108,
    108,  108,   89,   90,   91,  108,   93,   94,   66,  108,
     68,  108,  108,   71,   73,  108,   74,   75,  108,  108,
    108,  108,  108,   81,   83,  108,   85,   86,   87,  108,
    108,   89,   90,   91,  108,   93,   94,   66,  108,   68,
    108,  108,   71,  108,  108,   74,   75,  108,   66,  108,
     68,  108,   81,   71,  108,  108,   74,   75,  108,  108,
     89,   90,   91,   81,   93,   94,  108,  108,  108,  108,
    108,   89,   90,   91,  108,   93,   94,   66,  108,   68,
    108,   73,   71,  108,  108,   74,   75,  108,  108,  108,
    108,   83,   81,   85,   86,   87,  108,  108,  108,  108,
     89,   90,   91,  108,   93,   94,   66,  108,   68,  108,
    108,   71,  108,  108,   74,   75,  108,   66,  108,   68,
    108,   81,   71,  108,  108,   74,   75,  108,  108,   89,
     90,   91,   81,   93,   94,  108,  108,  108,  108,  108,
     89,   90,   91,    2,   93,   94,   24,  108,   26,  108,
      9,  108,  108,   12,   32,  108,    2,   16,   17,   37,
     38,   39,  108,    9,  108,  108,   12,  108,  108,   15,
     16,   17,  108,    2,  108,  108,   54,   55,   56,   57,
    108,  108,  108,  108,   27,   44,  108,  108,   47,  108,
     49,  108,   51,   52,   37,   38,   39,  108,   44,   21,
    108,   47,  108,   49,  108,   51,   35,  108,   37,   38,
     39,   54,   55,   56,   57,   37,   38,   39,   47,  108,
    108,  108,  108,  108,  108,   54,   55,   56,   57,    2,
    108,  108,   54,   55,   56,   57,    9,  108,  108,   12,
    108,  108,    2,   16,   17,   36,   37,   38,   39,    9,
    108,  108,   12,  108,  108,  108,   16,   17,  108,  108,
    108,  108,  108,   54,   55,   56,   57,  108,  108,  108,
    108,   44,  108,  108,   47,  108,   49,  108,   51,  108,
     37,   38,   39,  108,   44,   13,  108,   47,    2,   49,
     13,   51,  108,  108,  108,   52,  108,   54,   55,   56,
     57,   36,   37,   38,   39,  108,  108,  108,  108,   37,
     38,   39,   13,  108,   37,   38,   39,  108,  108,   54,
     55,   56,   57,   37,   38,   39,   54,   55,   56,   57,
    108,   54,   55,   56,   57,   13,   37,   38,   39,  108,
     54,   55,   56,   57,  108,  108,  108,  108,  108,  108,
    108,  108,  108,   54,   55,   56,   57,  108,  108,   37,
     38,   39,  108,    9,  108,  108,   12,   37,   38,   39,
     16,   17,  108,  108,  108,  108,   54,   55,   56,   57,
    108,  108,  108,  108,   54,   55,   56,   57,  108,  108,
    108,  108,  108,  108,  108,  108,  108,  108,   44,  108,
    108,   47,  108,   49,  108,   51,
);
    const YY_SHIFT_USE_DFLT = -10;
    const YY_SHIFT_MAX = 230;
    public static $yy_shift_ofst = array(
    -10,   42,   42,   93,  144,  144,  195,   93,   93,  144,
     93,  195,   -9,  246,   93,   93,   93,  246,   93,   93,
     93,   93,   93,  297,  348,   93,   93,   93,   93,   93,
     93,   93,   93,  399,   93,   93,   93,  450,  501,  501,
    501,  501,  501,  501,  501,  501, 1732,  870,  870,   92,
    708, 1549,   80,   85,  241,  740, 1788, 1767,  568, 1819,
   1853, 1875, 1882,  518, 1887, 1909, 1896, 1932, 1940, 1940,
   1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
   1940, 1940, 1940,  654,  814,   70,  102,  241,  241,   85,
     85,  114,  772,  697,  905,  317,  729,  761,  785,  360,
    360,  255,  135,  233,  135,  242,   14,  365,  371,  371,
    128,  420,  135,   27,   27,   27,   27,   27,   27,   27,
     27,   57,   57,  147,   27,  -10,  -10, 1751, 1764, 1837,
   1850, 1964,  196,  978,  411,  183,  135,  135,  276,  135,
    419,  135,  419,  135,  387,  387,  135,  135,  135,  135,
    387,  441,  387,  387,  387,  395,  387,  395,  387,  135,
    135,  135,  135,   27,  512,   27,   27,  512,   27,  487,
     57,   57,   57,  -10,  -10,  -10,  -10,  -10,  -10, 1781,
      4,   44,  146,  237, 1007,  188,  290,  171,  352,  448,
    482,  359,  116,  433,   63,  154,  318,  429,  437,  453,
    455,  461,  468,  305,  530,  525,  528,  526,  532,  534,
    537,  542,  549,  552,  502,  544,  547,  548,  550,  566,
    487,  575,  554,  559,  576,  535,  545,  584,  595,  577,
    589,
);
    const YY_REDUCE_USE_DFLT = -78;
    const YY_REDUCE_MAX = 178;
    public static $yy_reduce_ofst = array(
    -44,  495,  527,  560,  571,  603,  738,  768,  800,  829,
    862,  891,  902,  931,  960,  971, 1000, 1029, 1040, 1069,
   1098, 1109, 1138, 1167, 1178, 1207, 1236, 1247, 1276, 1305,
   1316, 1345, 1374, 1385, 1414, 1443, 1454, 1483, 1512, 1523,
   1552, 1581, 1592, 1621, 1650, 1661,  617, 1551, 1618,   76,
    -60,  608,  229,  324,  777,  212,  -73,  -73,  -73,  -73,
    -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,
    -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,
    -73,  -73,  -73,  -28,  278,  -33,  101,   -5,  210,  243,
    396,  119,   59,   -6,   86,  -77,  142,  142,  142,  239,
     86,  -17,  178,  214,  271,  269,  286,  -17,   84,  322,
    142,  142,  343,  323,  142,  142,  142,  142,  142,  142,
    142,  -17,  337,  142,  142,  153,  142,  157,  157,  157,
    157,  157,  220,  249,  157,  157,  288,  288,  304,  288,
    363,  288,  370,  288,  386,  386,  288,  288,  288,  288,
    386,  389,  386,  386,  386,  391,  386,  421,  386,  288,
    288,  288,  288,  404,  415,  404,  404,  415,  404,  428,
    425,  425,  425,  460,  445,  446,  447,  438,  440,
);
    public static $yyExpectedTokens = array(
         array(),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),
         array(24, 26, 32, 37, 38, 39, 54, 55, 56, 57, ),
         array(26, 32, 37, 38, 39, 54, 55, 56, 57, ),
         array(26, 32, 37, 38, 39, 54, 55, 56, 57, ),
         array(14, 16, 48, 50, 53, ),
         array(3, 9, 10, 11, 12, 14, 18, 19, 20, 25, 29, 30, 31, 59, 60, ),
         array(1, 13, 17, 26, 32, 35, 47, ),
         array(14, 16, 50, 53, ),
         array(14, 35, 53, ),
         array(1, 26, 32, ),
         array(3, 9, 10, 11, 12, 14, 18, 19, 20, 25, 29, 30, 31, 59, 60, ),
         array(21, 37, 38, 39, 54, 55, 56, 57, ),
         array(27, 37, 38, 39, 54, 55, 56, 57, ),
         array(13, 37, 38, 39, 54, 55, 56, 57, ),
         array(36, 37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 52, 54, 55, 56, 57, ),
         array(36, 37, 38, 39, 54, 55, 56, 57, ),
         array(13, 37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, 60, ),
         array(13, 37, 38, 39, 54, 55, 56, 57, ),
         array(13, 37, 38, 39, 54, 55, 56, 57, ),
         array(2, 37, 38, 39, 54, 55, 56, 57, ),
         array(13, 37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(37, 38, 39, 54, 55, 56, 57, ),
         array(9, 12, 16, 26, 28, 32, ),
         array(9, 12, 16, 26, 32, ),
         array(17, 44, 51, ),
         array(15, 17, 47, ),
         array(1, 26, 32, ),
         array(1, 26, 32, ),
         array(14, 35, 53, ),
         array(14, 35, 53, ),
         array(1, 2, ),
         array(3, 4, 5, 6, 9, 10, 11, 12, 18, 19, 20, 25, 29, 30, 31, ),
         array(2, 9, 12, 15, 16, 17, 44, 47, 49, 51, ),
         array(9, 12, 16, 49, ),
         array(12, 14, 16, 53, ),
         array(1, 13, 26, 32, ),
         array(1, 13, 26, 32, ),
         array(1, 13, 26, 32, ),
         array(9, 12, 16, ),
         array(9, 12, 16, ),
         array(15, 17, 47, ),
         array(26, 32, ),
         array(14, 53, ),
         array(26, 32, ),
         array(26, 32, ),
         array(1, 17, ),
         array(17, 47, ),
         array(14, 16, ),
         array(14, 16, ),
         array(1, 52, ),
         array(1, 28, ),
         array(26, 32, ),
         array(1, ),
         array(1, ),
         array(1, ),
         array(1, ),
         array(1, ),
         array(1, ),
         array(1, ),
         array(1, ),
         array(17, ),
         array(17, ),
         array(1, ),
         array(1, ),
         array(),
         array(),
         array(2, 9, 12, 16, 17, 44, 47, 49, 51, 52, ),
         array(2, 9, 12, 15, 16, 17, 44, 47, 49, 51, ),
         array(2, 9, 12, 16, 17, 44, 47, 49, 51, ),
         array(2, 9, 12, 16, 17, 44, 47, 49, 51, ),
         array(9, 12, 16, 17, 44, 47, 49, 51, ),
         array(12, 14, 16, 33, 53, ),
         array(9, 12, 16, 49, ),
         array(9, 12, 16, ),
         array(15, 44, 51, ),
         array(26, 32, ),
         array(26, 32, ),
         array(15, 22, ),
         array(26, 32, ),
         array(14, 53, ),
         array(26, 32, ),
         array(14, 53, ),
         array(26, 32, ),
         array(44, 51, ),
         array(44, 51, ),
         array(26, 32, ),
         array(26, 32, ),
         array(26, 32, ),
         array(26, 32, ),
         array(44, 51, ),
         array(12, 35, ),
         array(44, 51, ),
         array(44, 51, ),
         array(44, 51, ),
         array(44, 51, ),
         array(44, 51, ),
         array(44, 51, ),
         array(44, 51, ),
         array(26, 32, ),
         array(26, 32, ),
         array(26, 32, ),
         array(26, 32, ),
         array(1, ),
         array(2, ),
         array(1, ),
         array(1, ),
         array(2, ),
         array(1, ),
         array(35, ),
         array(17, ),
         array(17, ),
         array(17, ),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(2, 35, 37, 38, 39, 47, 54, 55, 56, 57, ),
         array(13, 21, 23, 26, 32, 34, 36, 44, ),
         array(13, 15, 26, 32, 35, 47, ),
         array(13, 22, 26, 32, 45, ),
         array(13, 22, 26, 32, 45, ),
         array(9, 12, 16, 49, ),
         array(35, 44, 47, 52, ),
         array(28, 35, 47, ),
         array(22, 45, 60, ),
         array(22, 45, 52, ),
         array(6, 8, ),
         array(7, 8, ),
         array(21, 34, ),
         array(16, 49, ),
         array(22, 45, ),
         array(35, 47, ),
         array(35, 47, ),
         array(35, 47, ),
         array(34, 36, ),
         array(34, 36, ),
         array(34, 52, ),
         array(44, 52, ),
         array(34, 36, ),
         array(34, 36, ),
         array(15, 44, ),
         array(7, ),
         array(13, ),
         array(13, ),
         array(14, ),
         array(16, ),
         array(16, ),
         array(16, ),
         array(16, ),
         array(16, ),
         array(16, ),
         array(44, ),
         array(33, ),
         array(33, ),
         array(35, ),
         array(40, ),
         array(16, ),
         array(35, ),
         array(16, ),
         array(50, ),
         array(50, ),
         array(16, ),
         array(52, ),
         array(52, ),
         array(16, ),
         array(15, ),
         array(36, ),
         array(23, ),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
         array(),
);
    public static $yy_default = array(
    336,  512,  512,  512,  497,  497,  512,  474,  474,  512,
    474,  512,  512,  512,  512,  512,  512,  512,  512,  512,
    512,  512,  512,  512,  512,  512,  512,  512,  512,  512,
    512,  512,  512,  512,  512,  512,  512,  512,  512,  512,
    512,  512,  512,  512,  512,  512,  377,  356,  377,  512,
    512,  413,  512,  512,  377,  512,  512,  382,  512,  512,
    512,  512,  349,  512,  512,  512,  512,  512,  361,  473,
    397,  401,  472,  498,  500,  499,  402,  384,  388,  389,
    379,  382,  349,  377,  377,  487,  429,  377,  377,  512,
    512,  368,  326,  428,  439,  512,  391,  391,  391,  439,
    439,  429,  377,  512,  377,  377,  371,  429,  512,  512,
    391,  391,  358,  373,  391,  395,  404,  405,  406,  396,
    400,  429,  484,  404,  394,  334,  481,  428,  428,  428,
    428,  428,  512,  441,  439,  455,  346,  357,  512,  360,
    512,  365,  512,  366,  436,  437,  350,  352,  353,  354,
    465,  439,  464,  467,  466,  432,  433,  434,  435,  367,
    363,  364,  359,  369,  475,  372,  374,  476,  422,  439,
    461,  488,  485,  334,  480,  480,  480,  439,  439,  413,
    409,  413,  403,  403,  440,  413,  413,  403,  403,  332,
    512,  512,  512,  403,  413,  423,  512,  512,  512,  512,
    409,  512,  512,  409,  512,  512,  512,  512,  512,  512,
    512,  512,  512,  512,  409,  411,  512,  486,  415,  512,
    455,  512,  512,  512,  512,  512,  418,  512,  512,  512,
    385,  327,  328,  329,  330,  331,  333,  335,  337,  338,
    339,  340,  341,  342,  343,  345,  375,  355,  376,  457,
    458,  459,  479,  370,  477,  478,  407,  416,  417,  426,
    427,  438,  442,  443,  444,  392,  393,  408,  410,  412,
    414,  418,  419,  420,  398,  399,  421,  424,  425,  452,
    450,  453,  489,  490,  491,  492,  430,  431,  463,  456,
    471,  344,  462,  508,  509,  501,  502,  503,  506,  505,
    507,  510,  511,  504,  494,  496,  495,  493,  468,  451,
    449,  446,  447,  448,  454,  469,  470,  415,  445,  483,
    460,  455,  378,  362,  386,  390,
);
    const YYNOCODE = 109;
    const YYSTACKDEPTH = 500;
    const YYNSTATE = 326;
    const YYNRULE = 186;
    const YYERRORSYMBOL = 61;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    public static $yyFallback = array(
    );
    public function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        $this->yyTraceFILE = $TraceFILE;
        $this->yyTracePrompt = $zTracePrompt;
    }

    public function PrintTrace()
    {
        $this->yyTraceFILE = fopen('php://output', 'w');
        $this->yyTracePrompt = '<br>';
    }

    public $yyTraceFILE;
    public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'TEXT',        
  'STRIPON',       'STRIPOFF',      'LITERALSTART',  'LITERALEND',  
  'LITERAL',       'SIMPELOUTPUT',  'SIMPLETAG',     'SMARTYBLOCKCHILDPARENT',
  'LDEL',          'RDEL',          'DOLLARID',      'EQUAL',       
  'ID',            'PTR',           'LDELMAKENOCACHE',  'LDELIF',      
  'LDELFOR',       'SEMICOLON',     'INCDEC',        'TO',          
  'STEP',          'LDELFOREACH',   'SPACE',         'AS',          
  'APTR',          'LDELSETFILTER',  'CLOSETAG',      'LDELSLASH',   
  'ATTR',          'INTEGER',       'COMMA',         'OPENP',       
  'CLOSEP',        'MATH',          'UNIMATH',       'ISIN',        
  'QMARK',         'NOT',           'TYPECAST',      'HEX',         
  'DOT',           'INSTANCEOF',    'SINGLEQUOTESTRING',  'DOUBLECOLON', 
  'NAMESPACE',     'AT',            'HATCH',         'OPENB',       
  'CLOSEB',        'DOLLAR',        'LOGOP',         'SLOGOP',      
  'TLOGOP',        'SINGLECOND',    'ARRAYOPEN',     'QUOTE',       
  'BACKTICK',      'error',         'start',         'template',    
  'literal_e2',    'literal_e1',    'smartytag',     'tagbody',     
  'tag',           'outattr',       'eqoutattr',     'varindexed',  
  'output',        'attributes',    'variable',      'value',       
  'expr',          'modifierlist',  'statement',     'statements',  
  'foraction',     'varvar',        'modparameters',  'attribute',   
  'ternary',       'tlop',          'lop',           'scond',       
  'array',         'function',      'ns1',           'doublequoted_with_quotes',
  'static_class_access',  'arraydef',      'object',        'arrayindex',  
  'indexdef',      'varvarele',     'objectchain',   'objectelement',
  'method',        'params',        'modifier',      'modparameter',
  'arrayelements',  'arrayelement',  'doublequoted',  'doublequotedcontent',
    );

    public static $yyRuleName = array(
  'start ::= template',
  'template ::= template TEXT',
  'template ::= template STRIPON',
  'template ::= template STRIPOFF',
  'template ::= template LITERALSTART literal_e2 LITERALEND',
  'literal_e2 ::= literal_e1 LITERALSTART literal_e1 LITERALEND',
  'literal_e2 ::= literal_e1',
  'literal_e1 ::= literal_e1 LITERAL',
  'literal_e1 ::=',
  'template ::= template smartytag',
  'template ::=',
  'smartytag ::= SIMPELOUTPUT',
  'smartytag ::= SIMPLETAG',
  'smartytag ::= SMARTYBLOCKCHILDPARENT',
  'smartytag ::= LDEL tagbody RDEL',
  'smartytag ::= tag RDEL',
  'tagbody ::= outattr',
  'tagbody ::= DOLLARID eqoutattr',
  'tagbody ::= varindexed eqoutattr',
  'eqoutattr ::= EQUAL outattr',
  'outattr ::= output attributes',
  'output ::= variable',
  'output ::= value',
  'output ::= expr',
  'tag ::= LDEL ID attributes',
  'tag ::= LDEL ID',
  'tag ::= LDEL ID modifierlist attributes',
  'tag ::= LDEL ID PTR ID attributes',
  'tag ::= LDEL ID PTR ID modifierlist attributes',
  'tag ::= LDELMAKENOCACHE DOLLARID',
  'tag ::= LDELIF expr',
  'tag ::= LDELIF expr attributes',
  'tag ::= LDELIF statement',
  'tag ::= LDELIF statement attributes',
  'tag ::= LDELFOR statements SEMICOLON expr SEMICOLON varindexed foraction attributes',
  'foraction ::= EQUAL expr',
  'foraction ::= INCDEC',
  'tag ::= LDELFOR statement TO expr attributes',
  'tag ::= LDELFOR statement TO expr STEP expr attributes',
  'tag ::= LDELFOREACH SPACE expr AS varvar attributes',
  'tag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes',
  'tag ::= LDELFOREACH attributes',
  'tag ::= LDELSETFILTER ID modparameters',
  'tag ::= LDELSETFILTER ID modparameters modifierlist',
  'smartytag ::= CLOSETAG',
  'tag ::= LDELSLASH ID',
  'tag ::= LDELSLASH ID modifierlist',
  'tag ::= LDELSLASH ID PTR ID',
  'tag ::= LDELSLASH ID PTR ID modifierlist',
  'attributes ::= attributes attribute',
  'attributes ::= attribute',
  'attributes ::=',
  'attribute ::= SPACE ID EQUAL ID',
  'attribute ::= ATTR expr',
  'attribute ::= ATTR value',
  'attribute ::= SPACE ID',
  'attribute ::= SPACE expr',
  'attribute ::= SPACE value',
  'attribute ::= SPACE INTEGER EQUAL expr',
  'statements ::= statement',
  'statements ::= statements COMMA statement',
  'statement ::= DOLLARID EQUAL INTEGER',
  'statement ::= DOLLARID EQUAL expr',
  'statement ::= varindexed EQUAL expr',
  'statement ::= OPENP statement CLOSEP',
  'expr ::= value',
  'expr ::= ternary',
  'expr ::= DOLLARID COLON ID',
  'expr ::= expr MATH value',
  'expr ::= expr UNIMATH value',
  'expr ::= expr tlop value',
  'expr ::= expr lop expr',
  'expr ::= expr scond',
  'expr ::= expr ISIN array',
  'expr ::= expr ISIN value',
  'ternary ::= OPENP expr CLOSEP QMARK DOLLARID COLON expr',
  'ternary ::= OPENP expr CLOSEP QMARK expr COLON expr',
  'value ::= variable',
  'value ::= UNIMATH value',
  'value ::= NOT value',
  'value ::= TYPECAST value',
  'value ::= variable INCDEC',
  'value ::= HEX',
  'value ::= INTEGER',
  'value ::= INTEGER DOT INTEGER',
  'value ::= INTEGER DOT',
  'value ::= DOT INTEGER',
  'value ::= ID',
  'value ::= function',
  'value ::= OPENP expr CLOSEP',
  'value ::= variable INSTANCEOF ns1',
  'value ::= variable INSTANCEOF variable',
  'value ::= SINGLEQUOTESTRING',
  'value ::= doublequoted_with_quotes',
  'value ::= varindexed DOUBLECOLON static_class_access',
  'value ::= smartytag',
  'value ::= value modifierlist',
  'value ::= NAMESPACE',
  'value ::= arraydef',
  'value ::= ns1 DOUBLECOLON static_class_access',
  'ns1 ::= ID',
  'ns1 ::= NAMESPACE',
  'variable ::= DOLLARID',
  'variable ::= varindexed',
  'variable ::= varvar AT ID',
  'variable ::= object',
  'variable ::= HATCH ID HATCH',
  'variable ::= HATCH ID HATCH arrayindex',
  'variable ::= HATCH variable HATCH',
  'variable ::= HATCH variable HATCH arrayindex',
  'varindexed ::= DOLLARID arrayindex',
  'varindexed ::= varvar arrayindex',
  'arrayindex ::= arrayindex indexdef',
  'arrayindex ::=',
  'indexdef ::= DOT DOLLARID',
  'indexdef ::= DOT varvar',
  'indexdef ::= DOT varvar AT ID',
  'indexdef ::= DOT ID',
  'indexdef ::= DOT INTEGER',
  'indexdef ::= DOT LDEL expr RDEL',
  'indexdef ::= OPENB ID CLOSEB',
  'indexdef ::= OPENB ID DOT ID CLOSEB',
  'indexdef ::= OPENB SINGLEQUOTESTRING CLOSEB',
  'indexdef ::= OPENB INTEGER CLOSEB',
  'indexdef ::= OPENB DOLLARID CLOSEB',
  'indexdef ::= OPENB variable CLOSEB',
  'indexdef ::= OPENB value CLOSEB',
  'indexdef ::= OPENB expr CLOSEB',
  'indexdef ::= OPENB CLOSEB',
  'varvar ::= DOLLARID',
  'varvar ::= DOLLAR',
  'varvar ::= varvar varvarele',
  'varvarele ::= ID',
  'varvarele ::= SIMPELOUTPUT',
  'varvarele ::= LDEL expr RDEL',
  'object ::= varindexed objectchain',
  'objectchain ::= objectelement',
  'objectchain ::= objectchain objectelement',
  'objectelement ::= PTR ID arrayindex',
  'objectelement ::= PTR varvar arrayindex',
  'objectelement ::= PTR LDEL expr RDEL arrayindex',
  'objectelement ::= PTR ID LDEL expr RDEL arrayindex',
  'objectelement ::= PTR method',
  'function ::= ns1 OPENP params CLOSEP',
  'method ::= ID OPENP params CLOSEP',
  'method ::= DOLLARID OPENP params CLOSEP',
  'params ::= params COMMA expr',
  'params ::= expr',
  'params ::=',
  'modifierlist ::= modifierlist modifier modparameters',
  'modifierlist ::= modifier modparameters',
  'modifier ::= VERT AT ID',
  'modifier ::= VERT ID',
  'modparameters ::= modparameters modparameter',
  'modparameters ::=',
  'modparameter ::= COLON value',
  'modparameter ::= COLON UNIMATH value',
  'modparameter ::= COLON array',
  'static_class_access ::= method',
  'static_class_access ::= method objectchain',
  'static_class_access ::= ID',
  'static_class_access ::= DOLLARID arrayindex',
  'static_class_access ::= DOLLARID arrayindex objectchain',
  'lop ::= LOGOP',
  'lop ::= SLOGOP',
  'tlop ::= TLOGOP',
  'scond ::= SINGLECOND',
  'arraydef ::= OPENB arrayelements CLOSEB',
  'arraydef ::= ARRAYOPEN arrayelements CLOSEP',
  'arrayelements ::= arrayelement',
  'arrayelements ::= arrayelements COMMA arrayelement',
  'arrayelements ::=',
  'arrayelement ::= value APTR expr',
  'arrayelement ::= ID APTR expr',
  'arrayelement ::= expr',
  'doublequoted_with_quotes ::= QUOTE QUOTE',
  'doublequoted_with_quotes ::= QUOTE doublequoted QUOTE',
  'doublequoted ::= doublequoted doublequotedcontent',
  'doublequoted ::= doublequotedcontent',
  'doublequotedcontent ::= BACKTICK variable BACKTICK',
  'doublequotedcontent ::= BACKTICK expr BACKTICK',
  'doublequotedcontent ::= DOLLARID',
  'doublequotedcontent ::= LDEL variable RDEL',
  'doublequotedcontent ::= LDEL expr RDEL',
  'doublequotedcontent ::= smartytag',
  'doublequotedcontent ::= TEXT',
    );

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return 'Unknown';
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (empty($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE,
                $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        static $res3 = array();
        static $res4 = array();
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (isset($res3[$state][$token])) {
            if ($res3[$state][$token]) {
                return $expected;
            }
        } else {
            if ($res3[$state][$token] = in_array($token, self::$yyExpectedTokens[$state], true)) {
                return $expected;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ === 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno][1];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno][0]);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                        if (isset($res4[$nextstate][$token])) {
                            if ($res4[$nextstate][$token]) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        } else {
                            if ($res4[$nextstate][$token] = in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno][0];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate === self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
    $this->yyidx = $yyidx;
    $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        static $res = array();
        static $res2 = array();
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (isset($res[$state][$token])) {
            if ($res[$state][$token]) {
                return true;
            }
        } else {
            if ($res[$state][$token] = in_array($token, self::$yyExpectedTokens[$state], true)) {
                return true;
            }
       }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ === 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno][1];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno][0]);
                    if (isset($res2[$nextstate][$token])) {
                        if ($res2[$nextstate][$token]) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    } else {
                        if ($res2[$nextstate][$token] = (isset(self::$yyExpectedTokens[$nextstate]) && in_array($token, self::$yyExpectedTokens[$nextstate], true))) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno][0];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate === self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

   public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead === self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE, $this->yyTracePrompt . 'FALLBACK ' .
                        $this->yyTokenName[$iLookAhead] . ' => ' .
                        $this->yyTokenName[$iFallback] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i === self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead === self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
// line 220 "../smarty/lexer/smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error('Stack overflow in template parser');

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        $this->yystack[] = $yytos;
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE, "%sShift %d\n", $this->yyTracePrompt,
                $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf($this->yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite($this->yyTraceFILE,"\n");
        }
    }

    public static $yyRuleInfo = array(
  array( 0 => 62, 1 => 1 ),
  array( 0 => 63, 1 => 2 ),
  array( 0 => 63, 1 => 2 ),
  array( 0 => 63, 1 => 2 ),
  array( 0 => 63, 1 => 4 ),
  array( 0 => 64, 1 => 4 ),
  array( 0 => 64, 1 => 1 ),
  array( 0 => 65, 1 => 2 ),
  array( 0 => 65, 1 => 0 ),
  array( 0 => 63, 1 => 2 ),
  array( 0 => 63, 1 => 0 ),
  array( 0 => 66, 1 => 1 ),
  array( 0 => 66, 1 => 1 ),
  array( 0 => 66, 1 => 1 ),
  array( 0 => 66, 1 => 3 ),
  array( 0 => 66, 1 => 2 ),
  array( 0 => 67, 1 => 1 ),
  array( 0 => 67, 1 => 2 ),
  array( 0 => 67, 1 => 2 ),
  array( 0 => 70, 1 => 2 ),
  array( 0 => 69, 1 => 2 ),
  array( 0 => 72, 1 => 1 ),
  array( 0 => 72, 1 => 1 ),
  array( 0 => 72, 1 => 1 ),
  array( 0 => 68, 1 => 3 ),
  array( 0 => 68, 1 => 2 ),
  array( 0 => 68, 1 => 4 ),
  array( 0 => 68, 1 => 5 ),
  array( 0 => 68, 1 => 6 ),
  array( 0 => 68, 1 => 2 ),
  array( 0 => 68, 1 => 2 ),
  array( 0 => 68, 1 => 3 ),
  array( 0 => 68, 1 => 2 ),
  array( 0 => 68, 1 => 3 ),
  array( 0 => 68, 1 => 8 ),
  array( 0 => 80, 1 => 2 ),
  array( 0 => 80, 1 => 1 ),
  array( 0 => 68, 1 => 5 ),
  array( 0 => 68, 1 => 7 ),
  array( 0 => 68, 1 => 6 ),
  array( 0 => 68, 1 => 8 ),
  array( 0 => 68, 1 => 2 ),
  array( 0 => 68, 1 => 3 ),
  array( 0 => 68, 1 => 4 ),
  array( 0 => 66, 1 => 1 ),
  array( 0 => 68, 1 => 2 ),
  array( 0 => 68, 1 => 3 ),
  array( 0 => 68, 1 => 4 ),
  array( 0 => 68, 1 => 5 ),
  array( 0 => 73, 1 => 2 ),
  array( 0 => 73, 1 => 1 ),
  array( 0 => 73, 1 => 0 ),
  array( 0 => 83, 1 => 4 ),
  array( 0 => 83, 1 => 2 ),
  array( 0 => 83, 1 => 2 ),
  array( 0 => 83, 1 => 2 ),
  array( 0 => 83, 1 => 2 ),
  array( 0 => 83, 1 => 2 ),
  array( 0 => 83, 1 => 4 ),
  array( 0 => 79, 1 => 1 ),
  array( 0 => 79, 1 => 3 ),
  array( 0 => 78, 1 => 3 ),
  array( 0 => 78, 1 => 3 ),
  array( 0 => 78, 1 => 3 ),
  array( 0 => 78, 1 => 3 ),
  array( 0 => 76, 1 => 1 ),
  array( 0 => 76, 1 => 1 ),
  array( 0 => 76, 1 => 3 ),
  array( 0 => 76, 1 => 3 ),
  array( 0 => 76, 1 => 3 ),
  array( 0 => 76, 1 => 3 ),
  array( 0 => 76, 1 => 3 ),
  array( 0 => 76, 1 => 2 ),
  array( 0 => 76, 1 => 3 ),
  array( 0 => 76, 1 => 3 ),
  array( 0 => 84, 1 => 7 ),
  array( 0 => 84, 1 => 7 ),
  array( 0 => 75, 1 => 1 ),
  array( 0 => 75, 1 => 2 ),
  array( 0 => 75, 1 => 2 ),
  array( 0 => 75, 1 => 2 ),
  array( 0 => 75, 1 => 2 ),
  array( 0 => 75, 1 => 1 ),
  array( 0 => 75, 1 => 1 ),
  array( 0 => 75, 1 => 3 ),
  array( 0 => 75, 1 => 2 ),
  array( 0 => 75, 1 => 2 ),
  array( 0 => 75, 1 => 1 ),
  array( 0 => 75, 1 => 1 ),
  array( 0 => 75, 1 => 3 ),
  array( 0 => 75, 1 => 3 ),
  array( 0 => 75, 1 => 3 ),
  array( 0 => 75, 1 => 1 ),
  array( 0 => 75, 1 => 1 ),
  array( 0 => 75, 1 => 3 ),
  array( 0 => 75, 1 => 1 ),
  array( 0 => 75, 1 => 2 ),
  array( 0 => 75, 1 => 1 ),
  array( 0 => 75, 1 => 1 ),
  array( 0 => 75, 1 => 3 ),
  array( 0 => 90, 1 => 1 ),
  array( 0 => 90, 1 => 1 ),
  array( 0 => 74, 1 => 1 ),
  array( 0 => 74, 1 => 1 ),
  array( 0 => 74, 1 => 3 ),
  array( 0 => 74, 1 => 1 ),
  array( 0 => 74, 1 => 3 ),
  array( 0 => 74, 1 => 4 ),
  array( 0 => 74, 1 => 3 ),
  array( 0 => 74, 1 => 4 ),
  array( 0 => 71, 1 => 2 ),
  array( 0 => 71, 1 => 2 ),
  array( 0 => 95, 1 => 2 ),
  array( 0 => 95, 1 => 0 ),
  array( 0 => 96, 1 => 2 ),
  array( 0 => 96, 1 => 2 ),
  array( 0 => 96, 1 => 4 ),
  array( 0 => 96, 1 => 2 ),
  array( 0 => 96, 1 => 2 ),
  array( 0 => 96, 1 => 4 ),
  array( 0 => 96, 1 => 3 ),
  array( 0 => 96, 1 => 5 ),
  array( 0 => 96, 1 => 3 ),
  array( 0 => 96, 1 => 3 ),
  array( 0 => 96, 1 => 3 ),
  array( 0 => 96, 1 => 3 ),
  array( 0 => 96, 1 => 3 ),
  array( 0 => 96, 1 => 3 ),
  array( 0 => 96, 1 => 2 ),
  array( 0 => 81, 1 => 1 ),
  array( 0 => 81, 1 => 1 ),
  array( 0 => 81, 1 => 2 ),
  array( 0 => 97, 1 => 1 ),
  array( 0 => 97, 1 => 1 ),
  array( 0 => 97, 1 => 3 ),
  array( 0 => 94, 1 => 2 ),
  array( 0 => 98, 1 => 1 ),
  array( 0 => 98, 1 => 2 ),
  array( 0 => 99, 1 => 3 ),
  array( 0 => 99, 1 => 3 ),
  array( 0 => 99, 1 => 5 ),
  array( 0 => 99, 1 => 6 ),
  array( 0 => 99, 1 => 2 ),
  array( 0 => 89, 1 => 4 ),
  array( 0 => 100, 1 => 4 ),
  array( 0 => 100, 1 => 4 ),
  array( 0 => 101, 1 => 3 ),
  array( 0 => 101, 1 => 1 ),
  array( 0 => 101, 1 => 0 ),
  array( 0 => 77, 1 => 3 ),
  array( 0 => 77, 1 => 2 ),
  array( 0 => 102, 1 => 3 ),
  array( 0 => 102, 1 => 2 ),
  array( 0 => 82, 1 => 2 ),
  array( 0 => 82, 1 => 0 ),
  array( 0 => 103, 1 => 2 ),
  array( 0 => 103, 1 => 3 ),
  array( 0 => 103, 1 => 2 ),
  array( 0 => 92, 1 => 1 ),
  array( 0 => 92, 1 => 2 ),
  array( 0 => 92, 1 => 1 ),
  array( 0 => 92, 1 => 2 ),
  array( 0 => 92, 1 => 3 ),
  array( 0 => 86, 1 => 1 ),
  array( 0 => 86, 1 => 1 ),
  array( 0 => 85, 1 => 1 ),
  array( 0 => 87, 1 => 1 ),
  array( 0 => 93, 1 => 3 ),
  array( 0 => 93, 1 => 3 ),
  array( 0 => 104, 1 => 1 ),
  array( 0 => 104, 1 => 3 ),
  array( 0 => 104, 1 => 0 ),
  array( 0 => 105, 1 => 3 ),
  array( 0 => 105, 1 => 3 ),
  array( 0 => 105, 1 => 1 ),
  array( 0 => 91, 1 => 2 ),
  array( 0 => 91, 1 => 3 ),
  array( 0 => 106, 1 => 2 ),
  array( 0 => 106, 1 => 1 ),
  array( 0 => 107, 1 => 3 ),
  array( 0 => 107, 1 => 3 ),
  array( 0 => 107, 1 => 1 ),
  array( 0 => 107, 1 => 3 ),
  array( 0 => 107, 1 => 3 ),
  array( 0 => 107, 1 => 1 ),
  array( 0 => 107, 1 => 1 ),
    );

    public static $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        5 => 5,
        6 => 6,
        21 => 6,
        22 => 6,
        23 => 6,
        36 => 6,
        56 => 6,
        57 => 6,
        65 => 6,
        66 => 6,
        77 => 6,
        82 => 6,
        83 => 6,
        88 => 6,
        92 => 6,
        93 => 6,
        97 => 6,
        98 => 6,
        100 => 6,
        105 => 6,
        169 => 6,
        174 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        16 => 16,
        17 => 17,
        18 => 18,
        19 => 19,
        20 => 20,
        24 => 24,
        25 => 25,
        26 => 26,
        27 => 27,
        28 => 28,
        29 => 29,
        30 => 30,
        31 => 31,
        33 => 31,
        32 => 32,
        34 => 34,
        35 => 35,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        42 => 42,
        43 => 43,
        44 => 44,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        59 => 50,
        147 => 50,
        151 => 50,
        155 => 50,
        157 => 50,
        51 => 51,
        148 => 51,
        154 => 51,
        52 => 52,
        53 => 53,
        54 => 53,
        55 => 55,
        132 => 55,
        58 => 58,
        60 => 60,
        61 => 61,
        62 => 61,
        63 => 63,
        64 => 64,
        67 => 67,
        68 => 68,
        69 => 68,
        70 => 70,
        71 => 71,
        72 => 72,
        73 => 73,
        74 => 74,
        75 => 75,
        76 => 76,
        78 => 78,
        80 => 78,
        81 => 78,
        112 => 78,
        79 => 79,
        84 => 84,
        85 => 85,
        86 => 86,
        87 => 87,
        89 => 89,
        90 => 90,
        91 => 90,
        94 => 94,
        95 => 95,
        96 => 96,
        99 => 99,
        101 => 101,
        102 => 102,
        103 => 103,
        104 => 104,
        106 => 106,
        107 => 107,
        108 => 108,
        109 => 109,
        110 => 110,
        111 => 111,
        113 => 113,
        171 => 113,
        114 => 114,
        115 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 119,
        127 => 119,
        120 => 120,
        121 => 121,
        122 => 122,
        123 => 122,
        125 => 122,
        126 => 122,
        124 => 124,
        128 => 128,
        129 => 129,
        130 => 130,
        175 => 130,
        131 => 131,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        149 => 149,
        150 => 150,
        152 => 152,
        153 => 153,
        156 => 156,
        158 => 158,
        159 => 159,
        160 => 160,
        161 => 161,
        162 => 162,
        163 => 163,
        164 => 164,
        165 => 165,
        166 => 166,
        167 => 167,
        168 => 167,
        170 => 170,
        172 => 172,
        173 => 173,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        182 => 179,
        180 => 180,
        183 => 180,
        181 => 181,
        184 => 184,
        185 => 185,
    );
// line 233 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r0(){
    $this->root_buffer->prepend_array($this, $this->template_prefix);
    $this->root_buffer->append_array($this, $this->template_postfix);
    $this->_retvalue = $this->root_buffer->to_smarty_php($this);
    }
// line 240 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r1(){
         $text = $this->yystack[ $this->yyidx + 0 ]->minor;

         if ((string)$text == '') {
            $this->current_buffer->append_subtree($this, null);
         }

         $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Text($text, $this->strip));
    }
// line 250 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r2(){
    $this->strip = true;
    }
// line 254 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r3(){
    $this->strip = false;
    }
// line 259 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r4(){
       $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Text($this->yystack[$this->yyidx + -1]->minor));
    }
// line 264 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r5(){
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor.$this->yystack[$this->yyidx + -1]->minor;
    }
// line 267 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r6(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
// line 271 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r7(){
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;

    }
// line 276 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r8(){
    $this->_retvalue = '';
    }
// line 280 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r9(){
      if ($this->compiler->has_code) {
          $this->current_buffer->append_subtree($this, $this->mergePrefixCode($this->yystack[$this->yyidx + 0]->minor));
      }
     $this->compiler->has_variable_string = false;
     $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
// line 292 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r11(){
    $var = trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' $');
    if (preg_match('/^(.*)(\s+nocache)$/', $var, $match)) {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('nocache'),array('value'=>$this->compiler->compileVariable('\''.$match[1].'\'')));
    } else {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->compiler->compileVariable('\''.$var.'\'')));
    }
    }
// line 302 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r12(){
    $tag = trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()));
    if ($tag == 'strip') {
        $this->strip = true;
        $this->_retvalue = null;
    } else {
        if (defined($tag)) {
            if ($this->security) {
               $this->security->isTrustedConstant($tag, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$tag));
        } else {
            if (preg_match('/^(.*)(\s+nocache)$/', $tag, $match)) {
                $this->_retvalue = $this->compiler->compileTag($match[1],array('\'nocache\''));
            } else {
                $this->_retvalue = $this->compiler->compileTag($tag,array());
            }
        }
    }
    }
// line 323 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r13(){
    $j = strrpos($this->yystack[$this->yyidx + 0]->minor,'.');
    if ($this->yystack[$this->yyidx + 0]->minor[$j+1] == 'c') {
        // {$smarty.block.child}
        $this->_retvalue = $this->compiler->compileTag('child',array(),array($this->yystack[$this->yyidx + 0]->minor));
    } else {
        // {$smarty.block.parent}
       $this->_retvalue = $this->compiler->compileTag('parent',array(),array($this->yystack[$this->yyidx + 0]->minor));
     }
    }
// line 334 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r14(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor;
    }
// line 338 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r15(){
     $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor;
     }
// line 342 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r16(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor[1],array('value'=>$this->yystack[$this->yyidx + 0]->minor[0]));
    }
// line 351 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r17(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + 0]->minor[0]),array('var'=>'\''.substr($this->yystack[$this->yyidx + -1]->minor,1).'\'')),$this->yystack[$this->yyidx + 0]->minor[1]));
    }
// line 355 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r18(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + 0]->minor[0]),array('var'=>$this->yystack[$this->yyidx + -1]->minor['var'])),$this->yystack[$this->yyidx + 0]->minor[1]),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']));
    }
// line 359 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r19(){
       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
// line 363 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r20(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
// line 378 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r24(){
        if (defined($this->yystack[$this->yyidx + -1]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[$this->yyidx + -1]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -1]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
        }
    }
// line 388 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r25(){
        if (defined($this->yystack[$this->yyidx + 0]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + 0]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor,array());
        }
    }
// line 401 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r26(){
        if (defined($this->yystack[$this->yyidx + -2]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[$this->yyidx + -2]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor, array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));
        }
    }
// line 413 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r27(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_method'=>$this->yystack[$this->yyidx + -1]->minor));
    }
// line 418 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + 0]->minor,array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor, 'object_method'=>$this->yystack[$this->yyidx + -2]->minor));
    }
// line 423 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r29(){
    $this->_retvalue = $this->compiler->compileTag('make_nocache',array(array('var'=>'\''.substr($this->yystack[$this->yyidx + 0]->minor,1).'\'')));
    }
// line 428 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r30(){
    $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->compiler->getLdelLength())); 
    $this->_retvalue = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor));
    }
// line 433 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r31(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->compiler->getLdelLength()));
    $this->_retvalue = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + 0]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
// line 438 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r32(){
    $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->compiler->getLdelLength()));
    $this->_retvalue = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor));
    }
// line 449 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r34(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -6]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -4]->minor),array('var'=>$this->yystack[$this->yyidx + -2]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),1);
    }
// line 453 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r35(){
    $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 461 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r37(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -3]->minor),array('to'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
// line 465 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r38(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -5]->minor),array('to'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
// line 470 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r39(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -3]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor))));
    }
// line 474 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r40(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor),array('key'=>$this->yystack[$this->yyidx + -3]->minor))));
    }
// line 477 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r41(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + 0]->minor);
    }
// line 482 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r42(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -1]->minor),$this->yystack[$this->yyidx + 0]->minor))));
    }
// line 486 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r43(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor)),$this->yystack[$this->yyidx + 0]->minor)));
    }
// line 492 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r44(){
    $tag = trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' /');
    if ($tag === 'strip') {
        $this->strip = false;
        $this->_retvalue = null;
    } else {
       $this->_retvalue = $this->compiler->compileTag($tag.'close',array());
    }
     }
// line 501 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r45(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor.'close',array());
    }
// line 505 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r46(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
// line 510 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r47(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + 0]->minor));
    }
// line 514 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + -1]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
// line 522 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r49(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
// line 528 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r50(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
// line 533 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r51(){
    $this->_retvalue = array();
    }
// line 538 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r52(){
    if (defined($this->yystack[$this->yyidx + 0]->minor)) {
        if ($this->security) {
            $this->security->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);
        }
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'\''.$this->yystack[$this->yyidx + 0]->minor.'\'');
    }
    }
// line 549 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r53(){
    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor," =\n\r\t")=>$this->yystack[$this->yyidx + 0]->minor);
    }
// line 557 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r55(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
// line 569 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r58(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    }
// line 582 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r60(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
// line 587 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r61(){
    $this->_retvalue = array('var' => '\''.substr($this->yystack[$this->yyidx + -2]->minor,1).'\'', 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    }
// line 594 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r63(){
    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    }
// line 598 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r64(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
// line 618 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r67(){
    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''.substr($this->yystack[$this->yyidx + -2]->minor,1).'://' . $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
// line 623 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r68(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
// line 633 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r70(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor['pre']. $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor['op'].$this->yystack[$this->yyidx + 0]->minor .')';
    }
// line 637 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r71(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 641 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r72(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor . $this->yystack[$this->yyidx + -1]->minor . ')';
    }
// line 645 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r73(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';
    }
// line 649 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r74(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
// line 657 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r75(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '. $this->compiler->compileVariable('\''.substr($this->yystack[$this->yyidx + -2]->minor,1).'\'') . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 661 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r76(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 671 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r78(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 676 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r79(){
    $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 697 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r84(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 701 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r85(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';
    }
// line 705 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r86(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 710 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r87(){
    if (defined($this->yystack[$this->yyidx + 0]->minor)) {
        if ($this->security) {
             $this->security->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);
        }
        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
    }
// line 727 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r89(){
    $this->_retvalue = '('. $this->yystack[$this->yyidx + -1]->minor .')';
    }
// line 731 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r90(){
      $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 749 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r94(){
    if ($this->security && $this->security->static_classes !== array()) {
        $this->compiler->trigger_template_error('dynamic static class not allowed by security setting');
    }
    $prefixVar = $this->compiler->getNewPrefixVariable();
    if ($this->yystack[$this->yyidx + -2]->minor['var'] === '\'smarty\'') {
        $this->compiler->appendPrefixCode("<?php {$prefixVar} = ". $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).';?>');
     } else {
        $this->compiler->appendPrefixCode("<?php  {$prefixVar} = ". $this->compiler->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].';?>');
    }
    $this->_retvalue = $prefixVar .'::'.$this->yystack[$this->yyidx + 0]->minor[0].$this->yystack[$this->yyidx + 0]->minor[1];
    }
// line 763 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r95(){
    $prefixVar = $this->compiler->getNewPrefixVariable();
    $tmp = $this->compiler->appendCode('<?php ob_start();?>', $this->yystack[$this->yyidx + 0]->minor);
    $this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, "<?php {$prefixVar} = ob_get_clean();?>"));
    $this->_retvalue = $prefixVar;
    }
// line 770 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r96(){
    $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
// line 783 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r99(){
    if (!in_array(strtolower($this->yystack[$this->yyidx + -2]->minor), array('self', 'parent')) && (!$this->security || $this->security->isTrustedStaticClassAccess($this->yystack[$this->yyidx + -2]->minor, $this->yystack[$this->yyidx + 0]->minor, $this->compiler))) {
        if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
            $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor[0].$this->yystack[$this->yyidx + 0]->minor[1];
        } else {
            if ($this->yystack[$this->yyidx + 0]->minor[2] === 'method') {
                trigger_error('Using unregistered static method "' . $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor[0] . '" in a template is deprecated and will be ' .
                        'removed in a future release. Use Smarty::registerClass to explicitly register ' .
                        'a class for access.', E_USER_DEPRECATED);
            }
            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor[0].$this->yystack[$this->yyidx + 0]->minor[1];
        } 
    } else {
        $this->compiler->trigger_template_error ('static class \''.$this->yystack[$this->yyidx + -2]->minor.'\' is undefined or not allowed by security setting');
    }
    }
// line 807 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r101(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
        }
// line 818 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r102(){
   $this->_retvalue = $this->compiler->compileVariable('\''.substr($this->yystack[$this->yyidx + 0]->minor,1).'\'');
    }
// line 821 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r103(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] === '\'smarty\'') {
        $smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
        $this->_retvalue = $smarty_var;
    } else {
        // used for array reset,next,prev,end,current 
        $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
        $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    }
// line 834 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r104(){
    $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + -2]->minor .']->'.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 844 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r106(){
    $this->_retvalue = $this->compiler->compileConfigVariable('\'' . $this->yystack[$this->yyidx + -1]->minor . '\'');
    }
// line 848 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r107(){
    $this->_retvalue = '(is_array($tmp = ' . $this->compiler->compileConfigVariable('\'' . $this->yystack[$this->yyidx + -2]->minor . '\'') . ') ? $tmp'.$this->yystack[$this->yyidx + 0]->minor.' :null)';
    }
// line 852 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r108(){
    $this->_retvalue = $this->compiler->compileConfigVariable($this->yystack[$this->yyidx + -1]->minor);
    }
// line 856 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r109(){
    $this->_retvalue = '(is_array($tmp = ' . $this->compiler->compileConfigVariable($this->yystack[$this->yyidx + -2]->minor) . ') ? $tmp'.$this->yystack[$this->yyidx + 0]->minor.' : null)';
    }
// line 860 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r110(){
    $this->_retvalue = array('var'=>'\''.substr($this->yystack[$this->yyidx + -1]->minor,1).'\'', 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
// line 863 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r111(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
// line 876 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r113(){
    return;
    }
// line 882 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r114(){
    $this->_retvalue = '['.$this->compiler->compileVariable('\''.substr($this->yystack[$this->yyidx + 0]->minor,1).'\'').']';
    }
// line 885 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r115(){
    $this->_retvalue = '['.$this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';
    }
// line 889 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r116(){
    $this->_retvalue = '['.$this->compiler->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    }
// line 893 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r117(){
    $this->_retvalue = '[\''. $this->yystack[$this->yyidx + 0]->minor .'\']';
    }
// line 897 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r118(){
    $this->_retvalue = '['. $this->yystack[$this->yyidx + 0]->minor .']';
    }
// line 902 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r119(){
    $this->_retvalue = '['. $this->yystack[$this->yyidx + -1]->minor .']';
    }
// line 907 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r120(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    }
// line 911 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r121(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    }
// line 914 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r122(){
    $this->_retvalue = '['.$this->yystack[$this->yyidx + -1]->minor.']';
    }
// line 920 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r124(){
    $this->_retvalue = '['.$this->compiler->compileVariable('\''.substr($this->yystack[$this->yyidx + -1]->minor,1).'\'').']';
    }
// line 936 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r128(){
    $this->_retvalue = '[]';
    }
// line 946 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r129(){
    $this->_retvalue = '\''.substr($this->yystack[$this->yyidx + 0]->minor,1).'\'';
    }
// line 950 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r130(){
    $this->_retvalue = '\'\'';
    }
// line 955 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r131(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 963 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r133(){
    $var = trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' $');
    $this->_retvalue = $this->compiler->compileVariable('\''.$var.'\'');
    }
// line 969 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r134(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
// line 976 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r135(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] === '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    }
// line 985 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r136(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    }
// line 990 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r137(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 995 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r138(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) === '_') {
        $this->compiler->trigger_template_error (self::ERR1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 1002 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r139(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::ERR2);
    }
    $this->_retvalue = '->{'.$this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor.'}';
    }
// line 1009 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r140(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::ERR2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
// line 1016 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r141(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::ERR2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
// line 1024 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r142(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 1032 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r143(){
    $this->_retvalue = $this->compiler->compilePHPFunctionCall($this->yystack[$this->yyidx + -3]->minor, $this->yystack[$this->yyidx + -1]->minor);
    }
// line 1040 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r144(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) === '_') {
        $this->compiler->trigger_template_error (self::ERR1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . '('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
// line 1047 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r145(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::ERR2);
    }
    $prefixVar = $this->compiler->getNewPrefixVariable();
    $this->compiler->appendPrefixCode("<?php {$prefixVar} = ".$this->compiler->compileVariable('\''.substr($this->yystack[$this->yyidx + -3]->minor,1).'\'').';?>');
    $this->_retvalue = $prefixVar .'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
// line 1058 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r146(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
// line 1075 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r149(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
// line 1079 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r150(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
// line 1087 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r152(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
// line 1095 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r153(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
// line 1108 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r156(){
    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor);
    }
// line 1117 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r158(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor, '', 'method');
    }
// line 1122 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r159(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor, 'method');
    }
// line 1127 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r160(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor, '', 'constant');
    }
// line 1132 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r161(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor, 'property');
    }
// line 1137 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r162(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor, $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor, 'property');
    }
// line 1143 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r163(){
    $this->_retvalue = ' '. trim($this->yystack[$this->yyidx + 0]->minor) . ' ';
    }
// line 1147 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r164(){
    static $lops = array(
        'eq' => ' == ',
        'ne' => ' != ',
        'neq' => ' != ',
        'gt' => ' > ',
        'ge' => ' >= ',
        'gte' => ' >= ',
        'lt' =>  ' < ',
        'le' =>  ' <= ',
        'lte' => ' <= ',
        'mod' =>  ' % ',
        'and' => ' && ',
        'or' => ' || ',
        'xor' => ' xor ',
         );
    $op = strtolower(preg_replace('/\s*/', '', $this->yystack[$this->yyidx + 0]->minor));
    $this->_retvalue = $lops[$op];
    }
// line 1166 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r165(){
     static $tlops = array(
         'isdivby' => array('op' => ' % ', 'pre' => '!('),
         'isnotdivby' => array('op' => ' % ', 'pre' => '('),
         'isevenby' => array('op' => ' / ', 'pre' => '!(1 & '),
         'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),
         'isoddby' => array('op' => ' / ', 'pre' => '(1 & '),
         'isnotoddby' => array('op' => ' / ', 'pre' => '!(1 & '),
         );
     $op = strtolower(preg_replace('/\s*/', '', $this->yystack[$this->yyidx + 0]->minor));
     $this->_retvalue = $tlops[$op];
     }
// line 1179 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r166(){
        static $scond = array (
            'iseven' => '!(1 & ',
            'isnoteven' => '(1 & ',
            'isodd' => '(1 & ',
            'isnotodd' => '!(1 & ',
        );
   $op = strtolower(str_replace(' ', '', $this->yystack[$this->yyidx + 0]->minor));
   $this->_retvalue = $scond[$op];
    }
// line 1193 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r167(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
// line 1204 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r170(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 1212 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r172(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 1216 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r173(){ 
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
// line 1232 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r176(){
    $this->compiler->leaveDoubleQuote();
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php($this);
    }
// line 1238 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r177(){
    $this->yystack[$this->yyidx + -1]->minor->append_subtree($this, $this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
// line 1243 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r178(){
    $this->_retvalue = new Smarty_Internal_ParseTree_Dq($this, $this->yystack[$this->yyidx + 0]->minor);
    }
// line 1247 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r179(){
    $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)'.$this->yystack[$this->yyidx + -1]->minor);
    }
// line 1251 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r180(){
    $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)('.$this->yystack[$this->yyidx + -1]->minor.')');
    }
// line 1255 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r181(){
    $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\']->value');
    }
// line 1267 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r184(){
    $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->yystack[$this->yyidx + 0]->minor);
    }
// line 1271 "../smarty/lexer/smarty_internal_templateparser.y"
    public function yy_r185(){
    $this->_retvalue = new Smarty_Internal_ParseTree_DqContent($this->yystack[$this->yyidx + 0]->minor);
    }

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        if ($this->yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf($this->yyTraceFILE, "%sReduce (%d) [%s].\n",
                $this->yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (isset(self::$yyReduceMap[$yyruleno])) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno][0];
        $yysize = self::$yyRuleInfo[$yyruleno][1];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact === self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        } while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
// line 213 "../smarty/lexer/smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        } while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
// line 206 "../smarty/lexer/smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            $this->yystack[] = $x;
        }
        $yyendofinput = ($yymajor==0);

        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sInput %s\n",
                $this->yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact === self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE, "%sSyntax Error!\n",
                        $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx === self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE, "%sDiscard input token %s\n",
                                $this->yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx !== self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx !== self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor !== self::YYNOCODE && $this->yyidx >= 0);
    }
}

